@model NumberSearch.Mvc.SearchResults;

@{
    if (string.IsNullOrWhiteSpace(Model?.Query))
    {
        ViewData["Title"] = $"Phone Numbers";
    }
    else
    {
        ViewData["Title"] = $"{Model?.Query}";
    }

    var searchText = string.Empty;
    if (Model?.Query != null)
    {
        searchText = Model.Query;
    }

    var alreadyInCart = Model?.Cart?.PhoneNumbers?.ToDictionary(x => x.DialedNumber, x => x);

    // If we are showing any results, put a no index tag on the page.
    if (Model?.NumberOfResults > 0 || !string.IsNullOrWhiteSpace(Model?.Message))
    {
        ViewData["noindex"] = "noindex";
    }
}

<section class="text-light" style="background-color: #3279B2">
    <div class="container py-5 py-md-6 py-lg-7 mb-7 text-center">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-md-11">
                <h1 class="display-3 text-light d-none d-sm-block">Find the perfect Number</h1>
                <h4 class="display-4 text-light d-block d-sm-none">Find the perfect Number</h4>
                <p class="lead text-white">Phone numbers are part of your brand. Find the perfect one or bring your current number with you.</p>
            </div>
        </div>
    </div>
</section>
<div class="bg-light pt-3 pb-3">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <p>🌎 To search by area code, enter the area code and press search.</p>
                <p>💼 To bring your number with you, enter the 10 digit number and press search.</p>
                <p class="m-md-0">🛠️ For advanced search, use * to pad your search, for example ***word to search for a number containing word, but exclude the area code.</p>
            </div>
            <div class="offset-xl-2 offset-lg-1"></div>
            <div class="col">
                <form class="justify-content-center" method="get" asp-controller="Search" asp-action="Search">
                    
                    <div class="form-group">
                        <div class="input-group mx-auto input-group-lg">
                            <div class="input-group-prepend">
                                <span class="input-group-text">+1</span>
                            </div>
                            <input type="text" name="Query" class="form-control" placeholder="Enter a Phone Number" value="@searchText">
                        </div>
                        <div class="input-group mx-auto input-group-lg pt-2">
                            <button type="submit" class="btn btn-lg btn-success btn-block" onclick="displayBusyIndicator(this)">
                                Search
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@{
    if (!string.IsNullOrWhiteSpace(Model?.Message))
    {
        <div class="pb-3 pt-3">
            <div class="container">
                <div class="row">
                    @if (string.IsNullOrWhiteSpace(Model?.AlertType))
                    {
                        <div class="alert alert-danger col-12" role="alert">
                            @Model?.Message
                        </div>
                    }
                    else
                    {
                        var alertType = Model?.AlertType ?? "alert-danger";
                        <div class="alert @alertType col-12" role="alert">
                            @Model?.Message
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    if (Model is not null && Model?.PhoneNumbers is not null && Model.PhoneNumbers.Any())
    {
        var maxPage = Model.NumberOfResults / 50;
        var pageResultsCount = Model.Page * 50;

        var total = $"{Model?.NumberOfResults} available numbers found!";
        <div class="pt-3">
            <div class="container">
                <div class="row">
                    <div class="col">
                        @if (Model?.CleanQuery is not null && Model?.Query is not null && Model.CleanQuery.Length == 10 && Model.Query.Length == 3)
                        {
                            <div class="alert alert-info col-12" role="alert">
                                Area code @Model.CleanQuery.Substring(0, 3) detected.
                            </div>
                        }
                        <div class="alert alert-success col-12" role="alert">
                            @total
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col">
                    <form method="get" asp-controller="Search" asp-action="SearchAsync">
                        
                        <div class="btn-group btn-group-toggle pb-1 pb-md-3" data-toggle="buttons">
                            @{
                                if (Model?.View == "Sequential")
                                {
                                    <a class="btn btn-outline-secondary disabled d-none d-md-block" disabled>Filter by</a>
                                    <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&View=Recommended&Page=@Model.Page">Recommended</a>
                                    <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&View=Sequential&Page=@Model.Page">Sequential</a>
                                    <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Location</a>
                                    <script type="text/javascript">
                                        // Handles issue #124 on Github
                                        // https://github.com/AccelerateNetworks/NumberSearch/issues/124
                                        $(document).ready(function () {
                                            numbers = $("tr");
                                            last = numbers[0];
                                            blockColors = ["table-secondary", "table-default "];
                                            flag = true;
                                            lastArr = last.className.split(" ");
                                            if (lastArr.indexOf(blockColors[0]) == -1) {
                                                last.className += " " + blockColors[0];
                                            }
                                            for (x = 1; x < numbers.length; x++) {
                                                if (parseInt(numbers[x].id) != parseInt(last.id) + 1) {
                                                    flag = !flag;

                                                }
                                                if (flag) {
                                                    currentClassArr = numbers[x].className.split(" ");
                                                    if (currentClassArr.indexOf(blockColors[0]) == -1) {
                                                        numbers[x].className += " " + blockColors[0];
                                                    }
                                                }
                                                else {
                                                    currentClassArr = numbers[x].className.split(" ");
                                                    if (currentClassArr.indexOf(blockColors[1]) == -1) {
                                                        numbers[x].className += " " + blockColors[1];
                                                    }
                                                }

                                                last = numbers[x];
                                            }
                                        });
                                    </script>
                                }
                                else if (Model?.View == "Location")
                                {
                                    if (string.IsNullOrWhiteSpace(Model?.City))
                                    {
                                        <a class="btn btn-outline-secondary disabled d-none d-md-block" disabled>Filter by</a>
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Recommended&Page=@Model?.Page">Recommended</a>
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Sequential&Page=@Model?.Page">Sequential</a>
                                        <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Location&Page=@Model?.Page">Location</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-secondary disabled d-none d-md-block" disabled>Filter by</a>
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model.City&View=Recommended&Page=@Model.Page">Recommended</a>
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model.City&View=Sequential&Page=@Model.Page">Sequential</a>
                                        <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model.City&View=Location&Page=@Model.Page">Location</a>
                                    }
                                }
                                else
                                {
                                    <a class="btn btn-outline-secondary disabled d-none d-md-block" disabled>Filter by</a>
                                    <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Recommended&Page=@Model?.Page">Recommended</a>
                                    <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Sequential&Page=@Model?.Page">Sequential</a>
                                    <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=Location&Page=@Model?.Page">Location</a>
                                }
                            }
                        </div>
                        <div class="btn-group float-right pb-1 pb-md-3" role="group" aria-label="pagination">
                            @{
                                if ((Model?.NumberOfResults % 50) > 1)
                                {
                                    maxPage += 1;
                                }
                                if (Model?.Page > 1)
                                {
                                    var previousPage = Model.Page - 1;
                                    if (string.IsNullOrWhiteSpace(Model?.City))
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=@Model?.View&Page=@previousPage">Previous</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model?.City&View=@Model?.View&Page=@previousPage">Previous</a>
                                    }
                                    <a class="btn btn-outline-dark disabled">Page @Model?.Page of @maxPage</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-secondary disabled d-none d-md-block">Previous</a>
                                    <a class="btn btn-outline-dark disabled">Page @Model?.Page of @maxPage</a>
                                }
                                if (Model?.NumberOfResults > pageResultsCount)
                                {
                                    var nextPage = Model.Page + 1;
                                    if (string.IsNullOrWhiteSpace(Model?.City))
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=@Model?.View&Page=@nextPage">Next</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model.City&View=@Model.View&Page=@nextPage">Next</a>
                                    }
                                }
                                else
                                {
                                    <a class="btn btn-outline-secondary d-none d-md-block">Next</a>
                                }
                            }
                        </div>
                    </form>
                    @if (Model?.View == "Location")
                    {
                        <div class="pb-md-3 pb-1">
                            <a class="btn btn-outline-info mb-1 disabled" disabled>Filter by City</a>
                            @if (Model?.Cities is not null)
                            {
                                foreach (var city in Model.Cities)
                                {
                                    if (city == Model?.City)
                                    {
                                        <div class="btn-group">
                                            <a class="btn btn-outline-info active mb-1" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@city&View=Location&Page=@Model.Page">@city</a>
                                            <a class="btn btn-outline-danger mb-1" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Remove</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-info mb-1" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&City=@city&View=Location&Page=@Model?.Page">@city</a>
                                    }
                                }
                            }
                        </div>
                    }
                    <div class="table-responsive shadow-sm">
                        <table class="table table-striped table-borderless table-hover">
                            <tbody>
                                @if (Model?.PhoneNumbers is not null)
                                {
                                    var match = string.Empty;
                                    if (Model.CleanQuery != null && Model.CleanQuery.Contains('*'))
                                    {
                                        match = Model.CleanQuery.Substring(0, Model.CleanQuery.IndexOf('*'));
                                    }
                                    else
                                    {
                                        match = Model.CleanQuery;
                                    }

                                    foreach (var item in Model.PhoneNumbers)
                                    {
                                        var location = $"{item?.City ?? "Unknown City"}, {item?.State ?? "Unknown State"}";
                                        var formattedNumber = $"({item?.NPA}) {item?.NXX}-{item?.XXXX.ToString("0000")}";
                                        var number = item?.DialedNumber;

                                        if (number?.Contains(match!) ?? false)
                                        {
                                            var start = item?.DialedNumber.IndexOf(match!) ?? 0;
                                            var stop = Model?.CleanQuery?.Length ?? 0;
                                            var beginning = item?.DialedNumber.Substring(0, start);
                                            var middle = (start == 0) && (stop == 10) ? Model?.CleanQuery : Model?.Query;
                                            var end = item?.DialedNumber.Substring(start + stop);
                                            number = $"{beginning}<b class='text-success'>{middle}</b>{end}";
                                        }

                                        if (alreadyInCart is not null && item?.DialedNumber is not null && alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                                        {
                                            <tr id="@item.DialedNumber" class="table-success">
                                                <td class="d-none d-sm-table-cell">
                                                    @{
                                                        if (item.NumberType == "Standard")
                                                        {
                                                            <h4><span class="badge badge-secondary">Standard</span></h4>
                                                        }
                                                        else if (item.NumberType == "Premium")
                                                        {
                                                            <h4><span class="badge badge-primary">Premium</span></h4>
                                                        }
                                                        else if (item.NumberType == "Executive")
                                                        {
                                                            <h4><span class="badge badge-success">Executive</span></h4>
                                                        }
                                                        else if (item.NumberType == "Tollfree")
                                                        {
                                                            <h4><span class="badge badge-dark">Tollfree</span></h4>
                                                        }
                                                    }
                                                </td>
                                                <td scope="row"><h4>@formattedNumber</h4></td>
                                                <td class="d-none d-sm-table-cell">@Html.Raw(number)</td>
                                                <td class="d-none d-sm-table-cell">@location</td>
                                                <td>
                                                    @{
                                                        if (item.Purchased)
                                                        {
                                                            <button class="btn btn-outline-secondary disabled">
                                                                Already Purchased
                                                            </button>
                                                        }
                                                        else if (alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                                                        {
                                                            <button onclick="RemoveFromCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-danger">
                                                                <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                                Remove
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button onclick="AddToCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-primary">
                                                                <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                                Add to Cart
                                                            </button>
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr id="@item?.DialedNumber">
                                                <td class="d-none d-sm-table-cell">
                                                    @{
                                                        if (item?.NumberType == "Standard")
                                                        {
                                                            <h4><span class="badge badge-secondary">Standard</span></h4>
                                                        }
                                                        else if (item?.NumberType == "Premium")
                                                        {
                                                            <h4><span class="badge badge-primary">Premium</span></h4>
                                                        }
                                                        else if (item?.NumberType == "Executive")
                                                        {
                                                            <h4><span class="badge badge-success">Executive</span></h4>
                                                        }
                                                        else if (item?.NumberType == "Tollfree")
                                                        {
                                                            <h4><span class="badge badge-dark">Tollfree</span></h4>
                                                        }
                                                    }
                                                </td>
                                                <td scope="row"><h4>@formattedNumber</h4></td>
                                                <td class="d-none d-sm-table-cell">@Html.Raw(number)</td>
                                                <td class="d-none d-sm-table-cell">@location</td>
                                                <td>
                                                    @{
                                                        if (item is not null && item.Purchased)
                                                        {
                                                            <button class="btn btn-outline-secondary disabled">
                                                                Already Purchased
                                                            </button>
                                                        }
                                                        else if (alreadyInCart is not null && item?.DialedNumber is not null && alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                                                        {
                                                            <button onclick="RemoveFromCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-danger">
                                                                <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                                Remove
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button onclick="AddToCart('PhoneNumber', @item?.DialedNumber, 1, this)" class="btn btn-outline-primary">
                                                                <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                                Add to Cart
                                                            </button>
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <form method="get" asp-controller="Search" asp-action="SearchAsync">
                        
                        <div class="btn-group float-right pb-1 pb-md-3 pt-1 pt-md-3" role="group" aria-label="pagination">
                            @{
                                if (Model?.Page > 1)
                                {
                                    var previousPage = Model.Page - 1;
                                    if (string.IsNullOrWhiteSpace(Model?.City))
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=@Model?.View&Page=@previousPage">Previous</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model?.City&View=@Model?.View&Page=@previousPage">Previous</a>
                                    }
                                    <a class="btn btn-outline-dark disabled">Page @Model?.Page of @maxPage</a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-secondary disabled">Previous</a>
                                    <a class="btn btn-outline-dark disabled">Page @Model?.Page of @maxPage</a>
                                }
                                if (Model?.NumberOfResults > pageResultsCount)
                                {
                                    var nextPage = Model.Page + 1;
                                    if (string.IsNullOrWhiteSpace(Model?.City))
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model?.Query&View=@Model?.View&Page=@nextPage">Next</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-outline-secondary" onclick="displayBusyIndicator(this)" href="/Search?Query=@Model.Query&City=@Model.City&View=@Model.View&Page=@nextPage">Next</a>
                                    }
                                }
                                else
                                {
                                    <a class="btn btn-outline-secondary disabled">Next</a>
                                }
                            }
                        </div>
                    </form>
                    <br />
                </div>
            </div>
        </div>
    }
    else if (Model != null && Model?.PhoneNumbers?.Count() == 0)
    {
        <div class="pt-3 pb-3">
            <div class="container">
                <div class="row">
                    <div class="alert alert-danger col-12" role="alert">
                        No available numbers found!
                    </div>
                </div>
            </div>
        </div>
    }
}

<div class="mt-auto fixed-bottom bg-white pt-1 pb-1 shadow">
    <div class="container">
        <div class="row">
            <div class="col">
                <a type="button" class="btn btn-primary btn-lg btn-block" asp-controller="Hardware" asp-action="Index">◁ Add Hardware</a>
            </div>
            <div class="col">
                <a type="button" class="btn btn-success btn-lg btn-block" asp-controller="Cart" asp-action="Index">Review Cart 🛒</a>
            </div>
        </div>
    </div>
</div>