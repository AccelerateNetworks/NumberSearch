@model NumberSearch.Mvc.SearchResults;

@{
    if (string.IsNullOrWhiteSpace(Model?.Query))
    {
        ViewData["Title"] = $"Phone Numbers";
    }
    else
    {
        ViewData["Title"] = $"{Model?.Query}";
    }

    var searchText = string.Empty;
    if (Model?.Query != null)
    {
        searchText = Model.Query;
    }

    var alreadyInCart = Model?.Cart?.PhoneNumbers.ToDictionary(x => x?.DialedNumber, x => x);

    // If we are showing any results, put a no index tag on the page.
    if (Model?.NumberOfResults > 0 || !string.IsNullOrWhiteSpace(Model?.Message))
    {
        ViewData["noindex"] = "noindex";
    }
}

<!-- Page scroll indicator-->
<div class="progress sticky-top" style="height: 0.2rem">
  <div class="progress-bar bg-primary" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" id="scrollIndicator"></div>
</div>
<!-- Navbar (Solid background)-->
<header class="navbar navbar-expand-lg navbar-light bg-light navbar-sticky navbar-shadow" data-scroll-header data-fixed-element>
  <div class="container px-0 px-xl-3"><a class="navbar-brand flex-shrink-0 order-lg-1 ms-lg-0 pe-lg-2 me-lg-4" href="/"><img class="d-none d-lg-block" src="img/logo/logo-dark.png" alt="Accelerate Networks" width="153"><img class="d-lg-none" src="img/original/favicon-194x194.png" alt="Accelerate Networks" width="58"></a>
    <div class="d-flex align-items-center order-lg-3 ms-lg-auto"><a class="nav-link-style fs-sm text-nowrap d-none d-lg-inline-block" href="tel:12068588757">Talk to an expert: <strong>(206) 858-8757</strong></a><a class="d-md-none text-reset" href="tel:12068588757"><i class="ai-phone fs-xl me-2 align-middle"></i></a></div>
  </div>
</header>

<!-- Page content-->
<section class="bg-secondary">
  <div class="container py-3">
    <nav class="my-3" aria-label="breadcrumb">
      <ol class="breadcrumb justify-content-center">
        <li class="breadcrumb-item h6 mb-0"><a class="d-flex align-items-center" href="/hardware"><span class="me-2 ai-number-fill1 fs-3"></span><span class="d-none d-md-block">Select Phones</span></a></li>
        <li class="breadcrumb-item h6 mb-0 active text-primary d-flex align-items-center" aria-current="page"><span class="me-2 ai-number-fill2 fs-3"></span><span class="d-none d-md-block">Choose Numbers</span></li>
        <li class="breadcrumb-item h6 mb-0"><a class="d-flex align-items-center" href="/addons"><span class="me-2 ai-number3 fs-3"></span><span class="d-none d-md-block">Add Services</span></a></li>
        <li class="breadcrumb-item h6 mb-0"><a class="d-flex align-items-center" href="/checkout"><span class="me-2 ai-number4 fs-3"></span><span class="d-none d-md-block">Complete Checkout</span></a></li>
      </ol>
    </nav>
  </div>
</section>
<section class="container py-5">
  <div class="col-8 mx-auto">
    <h2 class="text-center">Choose or Transfer Phone Numbers</h2>
    <p class="text-center">Select the phone number you want to use for your business. Search for a new phone number, or keep your current one. We'll transfer it without any service interruption—guranteed.</p>
    <div class="d-flex justify-content-center py-3"><a class="btn btn-outline-secondary me-2" href="/hardware" style="min-width: 200px">Select Phones</a><a class="btn btn-brand-secondary ml-2" href="/addons" style="min-width: 200px">Add Services</a></div>
  </div>
  <div class="row py-5">
    <div class="col-sm-8 offset-sm-2">
      <div class="bg-light p-5 m-3 border rounded text-center shadow">
        <h4>Find or Transfer a Number</h4>
        <P>Search by area code, word, or number and press search.</P>
        <div class="or mb-3">OR</div>
        <p>Enter your existing 10-digit number and press transfer.</p>
        <form class="d-flex form-row justify-content-center my-3" action="/Search">
          <div class="form-group">
            <div class="input-group mx-auto mb-3"><span class="input-group-text">+1</span>
              <input class="form-control" type="text" name="Query" placeholder="Enter a Phone Number" value="@searchText">
            </div>
            <div class="mx-auto">
              <button class="btn btn-primary d-block w-100 mb-2" type="submit" onclick="displayBusyIndicator()">Search</button>
              <button class="btn btn-outline-dark d-block w-100" type="submit" onclick="displayBusyIndicator()" asp-controller="Porting" asp-action="CheckPortability">Transfer</button>
            </div>
          </div>
        </form>
      </div>
    </div
  </div>
<section>

<section class="container">
  <partial name="_LoadingPartial" />
  <div class="row">
  @{
      if (!string.IsNullOrWhiteSpace(Model?.Message))
      {
          if (string.IsNullOrWhiteSpace(Model?.AlertType))
          {
              <div class="alert alert-danger col-12" role="alert">
                  @Model?.Message
              </div>
          }
          else
          {
              var alertType = Model?.AlertType ?? "alert-danger";
              <div class="alert @alertType col-12" role="alert">
                  @Model?.Message
              </div>
          }
      }
      if (Model != null && Model?.PhoneNumbers?.Count() > 0)
      {
          var maxPage = Model.NumberOfResults / 50;
          var pageResultsCount = Model.Page * 50;

          if (Model.CleanQuery.Length == 10 && Model.Query.Length == 3)
          {
              <div class="alert alert-info col-12" role="alert">
                  Area code @Model.CleanQuery.Substring(0, 3) detected.
              </div>
          }

          var total = $"{Model.NumberOfResults} available numbers found!";
          <div class="alert alert-success col-12" role="alert">
              @total
          </div>
          <form action="/Search" class="col-12 pr-0 pl-0 pt-2 pb-3">
              <div class="btn-group btn-group-toggle" data-toggle="buttons">
                  @{
                      if (Model?.View == "Sequential")
                      {
                          <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Recommended&Page=@Model.Page">Recommended</a>
                          <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Sequential&Page=@Model.Page">Sequential</a>
                          <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Location</a>
                          <script type="text/javascript">
                              // Handles issue #124 on Github
                              // https://github.com/AccelerateNetworks/NumberSearch/issues/124
                              $(document).ready(function () {
                                  numbers = $("tr");
                                  last = numbers[0];
                                  blockColors = ["table-secondary", "table-default "];
                                  flag = true;
                                  lastArr = last.className.split(" ");
                                  if (lastArr.indexOf(blockColors[0]) == -1) {
                                      last.className += " " + blockColors[0];
                                  }
                                  for (x = 1; x < numbers.length; x++) {
                                      if (parseInt(numbers[x].id) != parseInt(last.id) + 1) {
                                          flag = !flag;

                                      }
                                      if (flag) {
                                          currentClassArr = numbers[x].className.split(" ");
                                          if (currentClassArr.indexOf(blockColors[0]) == -1) {
                                              numbers[x].className += " " + blockColors[0];
                                          }
                                      }
                                      else {
                                          currentClassArr = numbers[x].className.split(" ");
                                          if (currentClassArr.indexOf(blockColors[1]) == -1) {
                                              numbers[x].className += " " + blockColors[1];
                                          }
                                      }

                                      last = numbers[x];
                                  }
                              });
                          </script>
                      }
                      else if (Model?.View == "Location")
                      {
                          if (string.IsNullOrWhiteSpace(Model?.City))
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Recommended&Page=@Model.Page">Recommended</a>
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Sequential&Page=@Model.Page">Sequential</a>
                              <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Location</a>
                          }
                          else
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model.City&View=Recommended&Page=@Model.Page">Recommended</a>
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model.City&View=Sequential&Page=@Model.Page">Sequential</a>
                              <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model.City&View=Location&Page=@Model.Page">Location</a>
                          }
                      }
                      else
                      {
                          <a class="btn btn-outline-secondary active" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Recommended&Page=@Model.Page">Recommended</a>
                          <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Sequential&Page=@Model.Page">Sequential</a>
                          <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Location</a>
                      }
                  }
              </div>
              <div class="btn-group float-right" role="group" aria-label="pagination">
                  @{
                      if ((Model.NumberOfResults % 50) > 1)
                      {
                          maxPage += 1;
                      }
                      if (Model.Page > 1)
                      {
                          var previousPage = Model.Page - 1;
                          if (string.IsNullOrWhiteSpace(Model?.City))
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=@Model.View&Page=@previousPage">Previous</a>
                          }
                          else
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model?.City&View=@Model.View&Page=@previousPage">Previous</a>
                          }
                          <a class="btn btn-outline-dark disabled">Page @Model.Page of @maxPage</a>
                      }
                      else
                      {
                          <a class="btn btn-outline-secondary disabled">Previous</a>
                          <a class="btn btn-outline-dark disabled">Page @Model.Page of @maxPage</a>
                      }
                      if (Model.NumberOfResults > pageResultsCount)
                      {
                          var nextPage = Model.Page + 1;
                          if (string.IsNullOrWhiteSpace(Model?.City))
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=@Model.View&Page=@nextPage">Next</a>
                          }
                          else
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model.City&View=@Model.View&Page=@nextPage">Next</a>
                          }
                      }
                      else
                      {
                          <a class="btn btn-outline-secondary disabled">Next</a>
                      }
                  }
              </div>
          </form>
          if (Model?.View == "Location")
          {
              <p>Filter by City</p>
              <div class="mb-3">
                  @{
                      foreach (var city in Model?.Cities)
                      {
                          if (city == Model?.City)
                          {
                              <div class="btn-group">
                                  <a class="btn btn-outline-info active mb-1" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@city&View=Location&Page=@Model.Page">@city</a>
                                  <a class="btn btn-outline-danger mb-1" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=Location&Page=@Model.Page">Remove</a>
                              </div>
                          }
                          else
                          {
                              <a class="btn btn-outline-info mb-1" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@city&View=Location&Page=@Model.Page">@city</a>
                          }
                      }
                  }
              </div>
          }
          <div class="table-responsive shadow-sm">
              <table class="table table-striped table-borderless table-hover">
                  <tbody>
                      @{
                          var match = string.Empty;
                          if (Model.CleanQuery != null && Model.CleanQuery.Contains('*'))
                          {
                              match = Model.CleanQuery.Substring(0, Model.CleanQuery.IndexOf('*'));
                          }
                          else
                          {
                              match = Model.CleanQuery;
                          }

                          foreach (var item in Model?.PhoneNumbers)
                          {
                              var location = $"{item?.City ?? "Unknown City"}, {item?.State ?? "Unknown State"}";
                              var formattedNumber = $"({item.NPA}) {item.NXX}-{item.XXXX.ToString("0000")}";
                              var number = item.DialedNumber;

                              if (number.Contains(match))
                              {
                                  var start = item.DialedNumber.IndexOf(match);
                                  var stop = Model.CleanQuery.Length;
                                  var beginning = item.DialedNumber.Substring(0, start);
                                  var middle = (start == 0) && (stop == 10) ? Model.CleanQuery : Model.Query;
                                  var end = item.DialedNumber.Substring(start + stop);
                                  number = $"{beginning}<b class='text-success'>{middle}</b>{end}";
                              }

                              if (alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                              {
                                  <tr id="@item.DialedNumber" class="table-success">
                                      <td class="d-none d-sm-table-cell">
                                          @{
                                              if (item.NumberType == "Standard")
                                              {
                                                  <h4><span class="badge badge-secondary">Standard</span></h4>
                                              }
                                              else if (item.NumberType == "Premium")
                                              {
                                                  <h4><span class="badge badge-primary">Premium</span></h4>
                                              }
                                              else if (item.NumberType == "Executive")
                                              {
                                                  <h4><span class="badge badge-success">Executive</span></h4>
                                              }
                                              else if (item.NumberType == "Tollfree")
                                              {
                                                  <h4><span class="badge badge-dark">Tollfree</span></h4>
                                              }
                                          }
                                      </td>
                                      <td scope="row"><h4>@formattedNumber</h4></td>
                                      <td class="d-none d-sm-table-cell">@Html.Raw(number)</td>
                                      <td class="d-none d-sm-table-cell">@location</td>
                                      <td>
                                          @{
                                              if (item.Purchased)
                                              {
                                                  <button class="btn btn-outline-secondary disabled">
                                                      Already Purchased
                                                  </button>
                                              }
                                              else if (alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                                              {
                                                  <button onclick="RemoveFromCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-danger">
                                                      <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                      Remove
                                                  </button>
                                              }
                                              else
                                              {
                                                  <button onclick="AddToCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-primary">
                                                      <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                      Add to Cart
                                                  </button>
                                              }
                                          }
                                      </td>
                                  </tr>
                              }
                              else
                              {
                                  <tr id="@item.DialedNumber">
                                      <td class="d-none d-sm-table-cell">
                                          @{
                                              if (item.NumberType == "Standard")
                                              {
                                                  <h4><span class="badge badge-secondary">Standard</span></h4>
                                              }
                                              else if (item.NumberType == "Premium")
                                              {
                                                  <h4><span class="badge badge-primary">Premium</span></h4>
                                              }
                                              else if (item.NumberType == "Executive")
                                              {
                                                  <h4><span class="badge badge-success">Executive</span></h4>
                                              }
                                              else if (item.NumberType == "Tollfree")
                                              {
                                                  <h4><span class="badge badge-dark">Tollfree</span></h4>
                                              }
                                          }
                                      </td>
                                      <td scope="row"><h4>@formattedNumber</h4></td>
                                      <td class="d-none d-sm-table-cell">@Html.Raw(number)</td>
                                      <td class="d-none d-sm-table-cell">@location</td>
                                      <td>
                                          @{
                                              if (item.Purchased)
                                              {
                                                  <button class="btn btn-outline-secondary disabled">
                                                      Already Purchased
                                                  </button>
                                              }
                                              else if (alreadyInCart.TryGetValue(item.DialedNumber, out var _))
                                              {
                                                  <button onclick="RemoveFromCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-danger">
                                                      <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                      Remove
                                                  </button>
                                              }
                                              else
                                              {
                                                  <button onclick="AddToCart('PhoneNumber', @item.DialedNumber, 1, this)" class="btn btn-outline-primary">
                                                      <span class="d-none spinner-border spinner-border-sm mr-2" role="status">&nbsp;</span>
                                                      Add to Cart
                                                  </button>
                                              }
                                          }
                                      </td>
                                  </tr>
                              }
                          }
                      }
                  </tbody>
              </table>
          </div>
          <form action="/Search" class="col-12 pr-0 pl-0 pt-4 pb-3">
              <div class="btn-group float-right" role="group" aria-label="pagination">
                  @{
                      if (Model.Page > 1)
                      {
                          var previousPage = Model.Page - 1;
                          if (string.IsNullOrWhiteSpace(Model?.City))
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=@Model.View&Page=@previousPage">Previous</a>
                          }
                          else
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model?.City&View=@Model.View&Page=@previousPage">Previous</a>
                          }
                          <a class="btn btn-outline-dark disabled">Page @Model.Page of @maxPage</a>
                      }
                      else
                      {
                          <a class="btn btn-outline-secondary disabled">Previous</a>
                          <a class="btn btn-outline-dark disabled">Page @Model.Page of @maxPage</a>
                      }
                      if (Model.NumberOfResults > pageResultsCount)
                      {
                          var nextPage = Model.Page + 1;
                          if (string.IsNullOrWhiteSpace(Model?.City))
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&View=@Model.View&Page=@nextPage">Next</a>
                          }
                          else
                          {
                              <a class="btn btn-outline-secondary" onclick="displayBusyIndicator()" href="/Search?Query=@Model.Query&City=@Model.City&View=@Model.View&Page=@nextPage">Next</a>
                          }
                      }
                      else
                      {
                          <a class="btn btn-outline-secondary disabled">Next</a>
                      }
                  }
              </div>
          </form>
      }
      else if (Model != null && Model?.PhoneNumbers?.Count() == 0)
      {
          <div class="alert alert-danger col-12" role="alert">
              No available numbers found!
          </div>
      }
  }
  </div>
</section>
