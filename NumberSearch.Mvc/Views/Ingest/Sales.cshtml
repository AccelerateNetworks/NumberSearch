@using System.Text.Json;
@using System.Text.Json.Serialization;
@using NumberSearch.DataAccess;
@using System.Globalization;
@model NumberSearch.Mvc.SalesDashboard;

@{
    ViewData["Title"] = "Ingests";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    @{
        if (Model?.Orders is not null)
        {
            var graphData = Model.Orders.Where(x => x.DateSubmitted >= DateTime.Now.AddMonths(-6)).GroupBy(x => x.SalesEmail).OrderBy(x => x.Count()).ToArray();
            var commaString = string.Empty;
            List<string> dataSets = new();
            foreach (var rep in graphData)
            {
                string salesEmail = string.IsNullOrWhiteSpace(rep.FirstOrDefault()?.SalesEmail) ? "None" : rep.FirstOrDefault()?.SalesEmail.Replace(".", "").Split('@')[0] ?? string.Empty;
                var byMonth = rep.GroupBy(x => x.DateSubmitted.Month);
                List<int> countByMonth = new List<int>();
                for (var i = DateTime.Now.AddMonths(-6).Month; i <= DateTime.Now.Month; i++)
                {
                    countByMonth.Add(rep.Where(x => x.DateSubmitted.Month == i).Count());
                }
                //@Html.Raw($"const {salesEmail} = {JsonSerializer.Serialize(countByMonth)}\n")
                @Html.Raw($"const {salesEmail}Data = {{ label: '{salesEmail}', data: {JsonSerializer.Serialize(countByMonth)} }}\n")
                
                dataSets.Add($"{salesEmail}Data");
            }
            @Html.Raw($"let dataSets = [{string.Join(",", dataSets)}]\n")

            List<string> months = new();
            for (var i = DateTime.Now.AddMonths(-6).Month; i <= DateTime.Now.Month; i++)
            {
                months.Add(new DateTime(2023, i, 1)
                .ToString("MMM", CultureInfo.InvariantCulture));
            }
            @Html.Raw($"const months = {JsonSerializer.Serialize(months)}\n")
        }
    }
</script>

<style type="text/css">
    /* 13. Basic Styling with CSS */

    /* Style the lines by removing the fill and applying a stroke */
    .line {
        fill: none;
        stroke: #ffab00;
        stroke-width: 3;
    }

    .overlay {
        fill: none;
        pointer-events: all;
    }

    /* Style the dots by assigning a fill and stroke */
    .dot {
        fill: #ffab00;
        stroke: #fff;
    }

    .focus circle {
        fill: none;
        stroke: steelblue;
    }
</style>

<div class="container">
    <canvas id="myChart" width="400" height="200" class="pb-5"></canvas>

    <div class="row">
        <div class="col">
            <div class="table-responsive shadow-sm mt-3 mb-3">
                <table class="table table-hover table-striped table-borderless">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Sales Email</th>
                            <th>Orders</th>
                            <th>Quotes</th>
                            <th>Completed</th>
                            <th>Most Recent Order</th>
                            <th>Most Recent Quote</th>
                            <th>Orders this Quarter</th>
                            <th>Orders this Month</th>
                            <th>Orders this Week</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model?.Orders.Length > 0)
                        {
                            var groupedByEmail = Model.Orders.GroupBy(x => x.SalesEmail);
                            int rank = 0;
                            foreach (var salesGroup in groupedByEmail.OrderByDescending(x => x.Count()))
                            {
                                rank += 1;
                                string salesEmail = string.IsNullOrWhiteSpace(salesGroup.FirstOrDefault()?.SalesEmail) ? "None" : salesGroup.FirstOrDefault()?.SalesEmail.Replace(".", "").Split('@')[0] ?? string.Empty;
                                int countOrders = salesGroup.Count(x => x.Quote is false);
                                int countQuotes = salesGroup.Count(x => x.Quote);
                                int countCompleted = salesGroup.Count(x => x.Completed);
                                Order? mostRecentOrder = salesGroup.Where(x => x.Quote is false).MaxBy(x => x.DateSubmitted);
                                Order? mostRecentQuote = salesGroup.Where(x => x.Quote).MaxBy(x => x.DateSubmitted);
                                string recentOrder = mostRecentOrder?.DateSubmitted.ToShortDateString() ?? "None found";
                                string recentQuote = mostRecentQuote?.DateSubmitted.ToShortDateString() ?? "None found";
                                int sumOrdersByQuarter = salesGroup.Count(x => x.DateSubmitted >= DateTime.Now.AddMonths(-3));
                                int sumOrdersByMonth = salesGroup.Count(x => x.DateSubmitted >= DateTime.Now.AddMonths(-1));
                                int sumOrdersByWeek = salesGroup.Count(x => x.DateSubmitted >= DateTime.Now.AddDays(-7));
                                string solo = $"{salesEmail}Data";
                                <tr onclick="quoteAndOrder([@solo])">
                                    <td>@rank</td>
                                    <td>
                                        @salesEmail
                                    </td>
                                    <td>
                                        @countOrders
                                    </td>
                                    <td>
                                        @countQuotes
                                    </td>
                                    <td>
                                        @countCompleted
                                    </td>
                                    <td>
                                        @if (mostRecentOrder is not null)
                                        {
                                            string name = string.IsNullOrWhiteSpace(mostRecentOrder.BusinessName) ? $"{mostRecentOrder.FirstName} {mostRecentOrder.LastName}" : mostRecentOrder.BusinessName;
                                            <a href="https://acceleratenetworks.com/cart/order/@mostRecentOrder.OrderId" target="_blank">@name</a>

                                            <p>@recentOrder</p>
                                        }
                                        else
                                        {
                                            @recentOrder
                                        }
                                    </td>
                                    <td>
                                        @if (mostRecentQuote is not null)
                                        {
                                            string name = string.IsNullOrWhiteSpace(mostRecentQuote.BusinessName) ? $"{mostRecentQuote.FirstName} {mostRecentQuote.LastName}" : mostRecentQuote.BusinessName;
                                            <a href="https://acceleratenetworks.com/cart/order/@mostRecentQuote.OrderId" target="_blank">@name</a>

                                            <p>@recentQuote</p>
                                        }
                                        else
                                        {
                                            @recentQuote
                                        }
                                    </td>
                                    <td>
                                        @sumOrdersByQuarter
                                    </td>
                                    <td>
                                        @sumOrdersByMonth
                                    </td>
                                    <td>
                                        @sumOrdersByWeek
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'line',
        data: {
            labels: months,
            datasets: dataSets
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Orders by Sales Rep'
                }
            }
        },
    });

    function quoteAndOrder(data) {
        const ctx = document.getElementById('myChart');

        new Chart(ctx, {
            type: 'line',
            data: {
                labels: months,
                datasets: data
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Orders by Sales Rep'
                    }
                }
            },
        });
    }
</script>