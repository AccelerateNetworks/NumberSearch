@model NumberSearch.Mvc.Cart;

@{
    ViewData["Title"] = "Order";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var numbers = Model?.PhoneNumbers?.ToArray();
    var purchased = Model?.PurchasedPhoneNumbers?.ToArray();
    var ported = Model?.PortedPhoneNumbers?.ToArray();
    var products = Model?.Products?.ToArray();
    var services = Model?.Services?.ToArray();
    var verified = Model?.VerifiedPhoneNumbers?.ToArray();
    var coupons = Model?.Coupons?.ToArray();
    var sumOfitems = numbers?.Length + ported?.Length + products?.Length + services?.Length + purchased?.Length + verified?.Length + coupons?.Length;
    var productOrders = Model?.ProductOrdersToDictionary();

}
<script type="text/javascript">
    function handleSearchQuery(textBox) {
        var route = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest?text=';
        var suffix = '&maxSuggestions=5&countryCode=USA&f=pjson';
        fetch(`${route}${textBox.value}${suffix}`)
            .then(
                function (response) {
                    if (response.status !== 200) {
                        console.log('Looks like there was a problem. Status Code: ' +
                            response.status);
                        return;
                    }

                    // Examine the text in the response
                    response.json().then(function (data) {
                        var options = '';
                        var longestResult = 0;
                        if (data.suggestions != undefined) {
                            for (var i = 0; i < data.suggestions.length; i++) {
                                options += `<li class='list-group-item' onclick='setAddress(this.innerHTML)'>${data.suggestions[i].text}</li>`;
                                if (longestResult < data.suggestions[i].text.length) {
                                    longestResult = data.suggestions[i].text.length;
                                }
                            }

                            var datalist = document.getElementById("addressOptions");
                            datalist.innerHTML = options;
                            datalist.hidden = false;
                        }

                        var textBox = document.getElementById("address");
                        textBox.focus();

                        console.log(datalist);
                    });
                }
            )
            .catch(function (err) {
                console.log('Fetch Error :-S', err);
            });
    }

    function setAddress(address) {
        var textBox = document.getElementById("address");
        textBox.value = address;
        var datalist = document.getElementById("addressOptions");
        datalist.hidden = true;
    }
</script>

<div class="container">
    <br />
    <div class="pricing-header mx-auto p-2 text-center">
        @{
            if (Model?.Order?.OrderId != Guid.Empty && Model?.Order?.DateSubmitted == DateTime.MinValue)
            {
                <h1 class="display-4">Complete Your Order</h1>
            }
            else if (Model?.Order?.DateSubmitted > DateTime.MinValue)
            {
                <h1 class="display-4">Your Completed Order</h1>
            }
        }
    </div>
    <br />
    <div class="row d-flex align-content-end">
        @{
            if (Model.Order.Completed)
            {
                <div class="col-md-12 order-md-1 pb-5">
                    <div class="progress" style="height: 3px;">
                        <div class="progress-bar bg-success" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-success badge-pill">☎️ Submitted</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-success  badge-pill">⚙️ Processed</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-success badge-pill">🎉 Completed</span>
                    </h4>
                </div>
            }
            else if (Model.Order.BackgroundWorkCompleted)
            {
                <div class="col-md-12 order-md-1 pb-5">
                    <div class="progress" style="height: 3px;">
                        <div class="progress-bar" role="progressbar" style="width: 66%;" aria-valuenow="66" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-primary badge-pill">☎️ Submitted</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-primary badge-pill">⚙️ Processing</span>
                    </h4>
                </div>
                if ((purchased is not null) && (purchased.Any()) && (purchased?.Where(x => x.Completed is true).ToArray().Length == purchased?.Length))
                {
                    <div class="col">
                        <h4>
                            <span class="badge badge-primary badge-pill">✔️ Purchased</span>
                        </h4>
                    </div>
                }
                else if (purchased is not null && purchased.Any())
                {
                    <div class="col">
                        <h4>
                            <span class="badge badge-primary badge-pill">❓ Purchased</span>
                        </h4>
                    </div>
                }
                var c = ported?.Where(x => x.Completed is true).ToArray().Length;
                if ((ported is not null) && (ported.Any()) && (ported?.Where(x => x.Completed is true).ToArray().Length == ported?.Length))
                {
                    <div class="col">
                        <h4>
                            <span class="badge badge-primary badge-pill">✔️ Transferred</span>
                        </h4>
                    </div>
                }
                else if (ported is not null && ported.Any())
                {
                    <div class="col">
                        <h4>
                            <span class="badge badge-primary badge-pill">❓ Transferred</span>
                        </h4>
                    </div>
                }
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Completed</span>
                    </h4>
                </div>
            }
            else if (Model?.Order?.DateSubmitted > DateTime.MinValue)
            {
                <div class="col-md-12 order-md-1 pb-5">
                    <div class="progress" style="height: 3px;">
                        <div class="progress-bar" role="progressbar" style="width: 33%;" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-primary badge-pill">☎️ Submitted</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Processed</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Completed</span>
                    </h4>
                </div>
            }
            else
            {
                <div class="col-md-12 order-md-1 pb-5">
                    <div class="progress" style="height: 3px;">
                        <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Submitted</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Processed</span>
                    </h4>
                </div>
                <div class="col">
                    <h4>
                        <span class="badge badge-secondary badge-pill">Completed</span>
                    </h4>
                </div>
            }
        }
    </div>
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Your Order</span>
                <span class="badge badge-success badge-pill">@sumOfitems</span>
            </h4>
            <ul class="list-group mb-3">
                @{
                    var productsTotal = 0;
                    var servicesTotal = 0;
                    var numbersTotal = 0;
                    var portedTotal = 0;
                    var verifiedTotal = 0;
                    var couponTotal = 0;
                    foreach (var number in numbers)
                    {
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                @{
                                    <h6 class="my-0">Phone Number ❓</h6>
                                }
                                <small class="text-muted">(@number.NPA  ) @number.NXX.ToString("000") @number.XXXX.ToString("0000")</small>
                            </div>
                            @{
                                if (number.NumberType == "Executive")
                                {
                                    numbersTotal += 200;
                                    <span class="text-muted">$200</span>
                                }
                                else if (number.NumberType == "Premium")
                                {
                                    numbersTotal += 40;
                                    <span class="text-muted">$40</span>
                                }
                                else
                                {
                                    numbersTotal += 20;
                                    <span class="text-muted">$20</span>
                                }
                            }
                        </li>
                    }

                    foreach (var number in purchased)
                    {
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">Phone Number ✔️</h6>
                                @{
                                    if (number.NPA == 0 && number.NXX == 0 && number.XXXX == 0)
                                    {
                                        <small class="text-muted">@number.DialedNumber</small>
                                    }
                                    else
                                    {
                                        <small class="text-muted">(@number.NPA) @number.NXX.ToString("000") @number.XXXX.ToString("0000")</small>
                                    }
                                }
                            </div>
                            @{
                                if (number.NumberType == "Executive")
                                {
                                    numbersTotal += 200;
                                    <span class="text-muted">$200</span>
                                }
                                else if (number.NumberType == "Premium")
                                {
                                    numbersTotal += 40;
                                    <span class="text-muted">$40</span>
                                }
                                else
                                {
                                    numbersTotal += 20;
                                    <span class="text-muted">$20</span>
                                }
                            }
                        </li>
                    }


                    foreach (var number in ported)
                    {
                        // Discount one ported number for each service they purchase.
                        var calculatedCost = 20;

                        var date = number.DateFirmOrderCommitment is null ? "Date Not Set" : number.DateFirmOrderCommitment.GetValueOrDefault(DateTime.Now).ToShortDateString();
                        var status = string.IsNullOrWhiteSpace(number.RequestStatus) ? "Status Not Set" : number.RequestStatus;
                        portedTotal += calculatedCost;
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                @{
                                    if (number.Completed)
                                    {
                                        <h6 class="my-0">Porting Phone Number ✔️</h6>
                                    }
                                    else
                                    {
                                        <h6 class="my-0">Porting Phone Number ❓</h6>
                                    }
                                }
                                <small class="text-muted">(@number.NPA) @number.NXX @number.XXXX.ToString("0000")</small>
                                @{
                                    if (number.DateFirmOrderCommitment is not null && !string.IsNullOrWhiteSpace(number.RequestStatus))
                                    {
                                        <h6 class="text-muted">@status - @date</h6>
                                    }
                                }
                            </div>
                            <span class="text-muted">$@calculatedCost</span>
                        </li>
                    }
                    foreach (var number in verified)
                    {
                        verifiedTotal += 10;
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">Verified Phone Number</h6>
                                <small class="text-muted">(@number.NPA) @number.NXX @number.XXXX.ToString("0000")</small>
                            </div>
                            <span class="text-muted">$10</span>
                        </li>
                    }
                    foreach (var product in products)
                    {
                        var productOrder = productOrders[product?.ProductId.ToString()];
                        var localTotal = productOrder.Quantity * product.Price;
                        productsTotal += localTotal;
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">
                                    @product.Name
                                    @if (productOrder.Quantity > 1)
                                    {
                                        <small>x @productOrder.Quantity</small>
                                    }
                                </h6>
                                <small class="text-muted">@product.Description</small>
                            </div>
                            <span class="text-muted">$@localTotal</span>
                        </li>
                    }
                    foreach (var service in services)
                    {
                        var productOrder = productOrders[service?.ServiceId.ToString()];
                        var localTotal = productOrder.Quantity * service.Price;
                        servicesTotal += localTotal;
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">
                                    @service.Name
                                    @if (productOrder.Quantity > 1)
                                    {
                                        <small>x @productOrder.Quantity</small>
                                    }
                                </h6>
                                <small class="text-muted">@service.Description</small>
                            </div>
                            <span class="text-muted">$@localTotal</span>
                        </li>
                    }
                    foreach (var coupon in coupons)
                    {
                        var productOrder = productOrders[coupon?.CouponId.ToString()];
                        var localTotal = 0;
                        if (coupon.Name == "Waive Port")
                        {
                            localTotal = portedTotal;
                            couponTotal += localTotal * -1;
                        }
                        else if (coupon.Name == "Waive Installation")
                        {
                            localTotal = 60;
                        }
                        <li class="list-group-item d-flex justify-content-between lh-condensed bg-light">
                            <div class="text-success">
                                <h6 class="my-0">
                                    @coupon.Name
                                </h6>
                                <small class="text-success">@coupon.Description</small>
                            </div>
                            <span class="text-success">-$@localTotal</span>
                        </li>
                    }
                }
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6>Total (USD)</h6>
                        <small class="text-muted">Plus installation, state and local taxes</small>
                    </div>
                    @{
                        var total = numbersTotal + portedTotal + productsTotal + servicesTotal + verifiedTotal + couponTotal;
                        <strong>$@total</strong>
                    }
                </li>
                @{
                    if (Model?.Order?.OrderId != Guid.Empty && Model?.Order?.DateSubmitted == DateTime.MinValue)
                    {
                        <div class="card p-2 mt-3">
                            <div class="input-group">
                                <input type="text" class="form-control" id="couponText" placeholder="Coupon code">
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-secondary" onclick="AddToCart('Coupon', document.getElementById('couponText').value, 1, this);">Redeem</button>
                                </div>
                            </div>
                        </div>
                    }
                }
                @{
                    if (Model.Order.DateSubmitted > DateTime.Now.AddYears(-99))
                    {
                        <h4 class="d-flex justify-content-between align-items-center mt-3">
                            <span class="text-muted">Submitted On</span>
                        </h4>
                        <h4 class="d-flex justify-content-between align-items-center mt-3">
                            <span class="badge badge-info badge-pill">@Model.Order.DateSubmitted</span>
                        </h4>
                    }
                    if (!string.IsNullOrWhiteSpace(Model?.Order?.UpfrontInvoiceLink) && !string.IsNullOrWhiteSpace(Model?.Order?.ReoccuringInvoiceLink))
                    {
                        <h4 class="d-flex justify-content-between align-items-center mt-3">
                            <span class="text-muted">Pay Now</span>
                        </h4>
                        <div class="btn-group mt-3" role="group" aria-label="billing links">
                            <a class="btn btn-primary" href="@Model?.Order?.UpfrontInvoiceLink" target="_blank" rel="noopener noreferrer">Upfront</a>
                            <a class="btn btn-primary" href="@Model?.Order?.ReoccuringInvoiceLink" target="_blank" rel="noopener noreferrer">Monthly</a>
                        </div>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model?.Order?.UpfrontInvoiceLink))
                    {
                        <h4 class="d-flex justify-content-between align-items-center mt-3">
                            <span class="text-muted">Pay Now</span>
                        </h4>
                        <a class="btn btn-primary mt-3" href="@Model?.Order?.UpfrontInvoiceLink" target="_blank" rel="noopener noreferrer">Upfront</a>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model?.Order?.ReoccuringInvoiceLink))
                    {
                        <h4 class="d-flex justify-content-between align-items-center mt-3">
                            <span class="text-muted">Pay Now</span>
                        </h4>
                        <a class="btn btn-primary mt-3" href="@Model?.Order?.ReoccuringInvoiceLink" target="_blank" rel="noopener noreferrer">Monthly</a>
                    }
                }
            </ul>
        </div>
        <div class="col-md-8 order-md-1 pb-5">
            <h4 class="mb-3">Billing Information</h4>
            <form asp-controller="Cart" asp-action="Submit" method="post">
                @Html.AntiForgeryToken()
                <input asp-for="Order.OrderId" type="text" value="@Model?.Order?.OrderId" hidden />
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="firstName">First name</label>
                        <input asp-for="Order.FirstName" type="text" class="form-control" id="firstName" placeholder="Alexander" required>
                        <small class="text-muted">
                            Enter your first name (ex. Alexander)
                        </small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="lastName">Last name</label>
                        <input asp-for="Order.LastName" type="text" class="form-control" id="lastName" placeholder="Bell" required>
                        <small class="text-muted">
                            Enter your last name (ex. Bell)
                        </small>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="email">Business Name <span class="text-muted">(Optional)</span></label>
                    <input asp-for="Order.BusinessName" type="text" class="form-control" id="businessName" placeholder="American Telegraph and Telephone Company">
                    <small class="text-muted">
                        Enter the name of your business or the organization that you represent (ex. Accelerate Networks)
                    </small>
                </div>

                <div class="mb-3">
                    <label for="email">Email </label>
                    <input asp-for="Order.Email" type="email" class="form-control" id="email" placeholder="tom@myspace.com" required>
                    <small class="text-muted">
                        Enter an email address for shipping updates and order information (ex. tom@myspace.com)
                    </small>
                </div>

                @if (Model?.Order?.OrderId != Guid.Empty && Model?.Order?.DateSubmitted > DateTime.MinValue)
                {
                    <div class="mb-3" id="searchForm">
                        <label for="address">Address</label>
                        <input asp-for="Order.UnparsedAddress" type="text" class="form-control" id="address" readonly>
                        <small class="text-muted">
                            Enter the shipping address for this order, or the address of the installation location (ex. 1250 1st Ave S, Seattle, WA, 98134, USA)
                        </small>
                    </div>
                }
                else
                {
                    <div class="mb-3" id="searchForm">
                        <label for="address">Address</label>
                        <input asp-for="Order.UnparsedAddress" type="text" class="form-control" id="address" placeholder="5432 5th Ave" pattern=".+[,].+" oninput="handleSearchQuery(this)" onfocus="handleSearchQuery(this)" list="addressOptions" autocomplete="off" data-toggle="dropdown" required>
                        <ul class="list-group" role="menu" aria-labelledby="menu1" id="addressOptions">
                        </ul>
                        <small class="text-muted">
                            Enter the shipping address for this order, or the address of the installation location (ex. 1250 1st Ave S, Seattle, WA, 98134, USA)
                        </small>
                    </div>
                }

                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label for="unitType">Unit Type <span class="text-muted">(Optional)</span></label>
                        <select asp-for="Order.AddressUnitType" class="custom-select d-block w-100" id="unitType">
                            @{
                                var unitTypes = new string[] {
                                "Apartment",
                                "Basement",
                                "Building",
                                "Department",
                                "Floor",
                                "Front",
                                "Hanger",
                                "Lobby",
                                "Lot",
                                "Lower",
                                "Office",
                                "Penthouse",
                                "Pier",
                                "Rear",
                                "Room",
                                "Side",
                                "Space",
                                "Suite",
                                "Trailer",
                                "Unit",
                                "Upper",
                                };

                                foreach (var unitType in unitTypes)
                                {
                                    <option>@unitType</option>
                                }
                            }
                        </select>
                        <small class="text-muted">
                            Optionally enter a unit type (ex. Apartment)
                        </small>
                    </div>
                    <div class="col-md-8 mb-3">
                        <label for="address2">Unit Number <span class="text-muted">(Optional)</span></label>
                        <input asp-for="Order.AddressUnitNumber" type="text" class="form-control" id="address2" placeholder="307">
                        <small class="text-muted">
                            Optionally enter a unit number (ex. 307)
                        </small>
                    </div>
                </div>
                <br />
                <h4 class="mb-3">Installation Information</h4>
                @{
                    if (Model?.Order?.DateSubmitted > DateTime.MinValue && (Model?.Products?.Any() ?? false))
                    {
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="installationType">Installation Location</label>
                                <div class="form-group">
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                        <label class="btn btn-outline-secondary">
                                            <input asp-for="Order.OnsiteInstallation" type="radio" id="ltoption1" value="false" disabled> Remote
                                        </label>
                                        <label class="btn btn-outline-secondary">
                                            <input asp-for="Order.OnsiteInstallation" type="radio" id="ltoption2" value="true" disabled> Onsite
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 mb-3">
                                <p>Remote installation is free, safe, and done virtually. We'll guide you through every step of plugging in your pre-configured phones!</p>
                                <p>Onsite installation is available in the Greater Seattle Area for a $60 call out charge. Time spent onsite is billed at $100 per hour.</p>
                            </div>
                        </div>
                    }
                    else if (Model?.Products?.Any() ?? false)
                    {
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="installationType">Installation Location</label>
                                <div class="form-group">
                                    <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                        <label class="btn btn-outline-secondary">
                                            <input asp-for="Order.OnsiteInstallation" type="radio" id="ltoption1" value="false" checked> Remote
                                        </label>
                                        <label class="btn btn-outline-secondary">
                                            <input asp-for="Order.OnsiteInstallation" type="radio" id="ltoption2" value="true"> Onsite
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 mb-3">
                                <p>Remote installation is free, safe, and done virtually. We'll guide you through every step of plugging in your pre-configured phones!</p>
                                <p>Onsite installation is available in the Greater Seattle Area for a $60 call out charge. Time spent onsite is billed at $100 per hour.</p>
                            </div>
                        </div>
                    }
                }
                <div class="row">
                    <div class="col-md-6 mb-3" id="installDateContainer">
                        <label for="installdate">Preferred Install Date <span class="text-muted">(Optional)</span></label>
                        @{
                            if (Model?.Order?.InstallDate is null && (Model?.Products?.Any() ?? false))
                            {
                                <input asp-for="Order.InstallDate" type="datetime-local" class="form-control" id="installdate" min="@DateTime.Now.AddDays(3).ToString(" yyyy-MM-ddThh:mm")" max="@DateTime.Now.AddDays(31).ToString(" yyyy-MM-ddThh:mm")" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}">
                                <small class="text-muted">
                                    Optionally chose an install date
                                </small>
                            }
                            else
                            {
                                <input asp-for="Order.InstallDate" type="datetime-local" class="form-control" id="installdate" readonly>
                            }
                        }
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="sales">Sales Representative <span class="text-muted">(Optional)</span></label>
                        <select asp-for="Order.SalesEmail" class="custom-select mr-sm-2" id="sales">
                            <option value="" selected>Choose...</option>
                            <option value="scott@acceleratenetworks.com">Scott</option>
                            <option value="kyle@acceleratenetworks.com">Kyle</option>
                            <option value="quentin@acceleratenetworks.com">Quentin</option>
                            <option value="dan@acceleratenetworks.com">Dan</option>
                        </select>
                        <small class="text-muted">
                            Optionally enter the name of your sales representive
                        </small>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="customernotes">Notes <span class="text-muted">(Optional)</span></label>
                        <input asp-for="Order.CustomerNotes" type="text" class="form-control" id="customernotes" placeholder="Add important information for our staff">
                    </div>
                    <div class="col-md-12">
                        <div class="form-check">
                            <input asp-for="Order.Quote" type="checkbox" class="form-check-input" id="defaultCheck1">
                            <label class="form-check-label" for="defaultCheck1">
                                Please send a quote
                            </label>
                        </div>
                    </div>
                </div>
                @{

                    if (ported.Any() && Model?.Order?.OrderId != Guid.Empty && Model?.Order?.DateSubmitted > DateTime.MinValue)
                    {
                        <hr class="mb-4">
                        @*<input type="text" hidden name="AddPortingInfo" value="true" />
                            <button asp-controller="Cart" asp-action="PortingInformation" asp-route-id="@Model?.Order?.OrderId" class="btn btn-primary btn-lg btn-block" type="submit" value="Submit">Add Porting Information</button>*@
                        <a asp-controller="Cart" asp-action="PortingInformation" asp-route-id="@Model?.Order?.OrderId" class="btn btn-primary btn-lg btn-block shadow">Add Porting Information</a>
                    }
                    else if (Model?.Order?.OrderId != Guid.Empty && Model?.Order?.DateSubmitted == DateTime.MinValue)
                    {
                        <partial name="_LoadingPartial" />
                        <hr class="mb-4">
                        <button class="btn btn-primary btn-lg btn-block shadow" type="submit" value="Submit">Submit your Order</button>
                    }
                }
                <br />
            </form>
        </div>
    </div>
</div>