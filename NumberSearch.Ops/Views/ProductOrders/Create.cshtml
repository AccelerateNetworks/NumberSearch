@model NumberSearch.Ops.Models.ProductOrderResult

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="display-4 p-3">🎁 Create Product Order</h1>
@Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductOrder!.OrderId" class="control-label"></label>
                <input asp-for="ProductOrder!.OrderId" class="form-control" readonly />
                <span asp-validation-for="ProductOrder!.OrderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.ProductOrderId" class="control-label"></label>
                <input asp-for="ProductOrder!.ProductOrderId" value="@Guid.NewGuid()" class="form-control" readonly />
                <span asp-validation-for="ProductOrder!.ProductOrderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.ProductId" class="control-label"></label>
                <select asp-for="ProductOrder!.ProductId" class="form-select mr-sm-2" id="name" required>
                    <option selected>Choose...</option>
                    @if (Model?.Products is not null)
                    {
                        foreach (var product in Model.Products.OrderByDescending(x => x.Name))
                        {
                            <option value="@product.ProductId">@product.Name</option>
                        }
                    }
                </select>
                <span asp-validation-for="ProductOrder!.ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.ServiceId" class="control-label"></label>
                <select asp-for="ProductOrder!.ServiceId" class="form-select mr-sm-2" id="name" required>
                    <option selected>Choose...</option>
                    @if (Model?.Services is not null)
                    {
                        foreach (var product in Model.Services.OrderByDescending(x => x.Name))
                        {
                            <option value="@product.ServiceId">@product.Name</option>
                        }
                    }
                </select>
                <span asp-validation-for="ProductOrder!.ServiceId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.DialedNumber" class="control-label"></label>
                <input asp-for="ProductOrder!.DialedNumber" class="form-control" />
                <span asp-validation-for="ProductOrder!.DialedNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.PortedDialedNumber" class="control-label"></label>
                <input asp-for="ProductOrder!.PortedDialedNumber" class="form-control" />
                <span asp-validation-for="ProductOrder!.PortedDialedNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.CouponId" class="control-label"></label>
                <select asp-for="ProductOrder!.CouponId" class="form-select mr-sm-2" id="name" required>
                    <option selected>Choose...</option>
                    @if (Model?.Coupons is not null)
                    {
                        foreach (var product in Model.Coupons.OrderByDescending(x => x.Name))
                        {
                            <option value="@product.CouponId">@product.Name</option>
                        }
                    }
                </select>
                <span asp-validation-for="ProductOrder!.CouponId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.Quantity" class="control-label"></label>
                <input type="number" asp-for="ProductOrder!.Quantity" class="form-control" />
                <span asp-validation-for="ProductOrder!.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductOrder!.CreateDate" class="control-label"></label>
                <input asp-for="ProductOrder!.CreateDate" class="form-control" readonly />
                <span asp-validation-for="ProductOrder!.CreateDate" class="text-danger"></span>
            </div>
            @*            <div class="form-group">
                <label asp-for="ProductOrder.PortedPhoneNumberId" class="control-label"></label>
                <input asp-for="ProductOrder.PortedPhoneNumberId" class="form-control" />
                <span asp-validation-for="ProductOrder.PortedPhoneNumberId" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label asp-for="ProductOrder.VerifiedPhoneNumberId" class="control-label"></label>
                <input asp-for="ProductOrder.VerifiedPhoneNumberId" class="form-control" />
                <span asp-validation-for="ProductOrder.VerifiedPhoneNumberId" class="text-danger"></span>
                </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary mt-3 mb-3" />
            </div>
        </form>
    </div>
</div>
<a href="/Order/@Model?.ProductOrder?.OrderId/ProductOrders" class="btn btn-outline-primary">Back to List</a>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
