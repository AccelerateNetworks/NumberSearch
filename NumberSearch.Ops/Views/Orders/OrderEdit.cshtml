@model NumberSearch.Ops.Models.EditOrderResult
@{
    ViewData["Title"] = "Order";
}

<script type="text/javascript">
    function handleSearchQuery(textBox) {
        var route = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest?text=';
        var suffix = '&maxSuggestions=5&countryCode=USA,CAN&f=pjson';
        fetch(`${route}${textBox.value}${suffix}`)
            .then(
                function (response) {
                    if (response.status !== 200) {
                        console.log('Looks like there was a problem. Status Code: ' +
                            response.status);
                        return;
                    }

                    // Examine the text in the response
                    response.json().then(function (data) {
                        var options = '';
                        var longestResult = 0;
                        if (data.suggestions != undefined) {
                            for (var i = 0; i < data.suggestions.length; i++) {
                                options += `<li class='list-group-item' onclick='setAddress(this.innerHTML)'>${data.suggestions[i].text}</li>`;
                                if (longestResult < data.suggestions[i].text.length) {
                                    longestResult = data.suggestions[i].text.length;
                                }
                            }

                            var datalist = document.getElementById("addressOptions");
                            datalist.innerHTML = options;
                            datalist.hidden = false;
                        }

                        var textBox = document.getElementById("address");
                        textBox.focus();

                        console.log(datalist);
                    });
                }
            )
            .catch(function (err) {
                console.log('Fetch Error :-S', err);
            });
    }

    function setAddress(address) {
        var textBox = document.getElementById("address");
        textBox.value = address;
        var datalist = document.getElementById("addressOptions");
        datalist.hidden = true;
    }
</script>

<h1 class="display-4 p-3">🛒 Order</h1>
@if (!string.IsNullOrWhiteSpace(Model?.Message))
{
    if (string.IsNullOrWhiteSpace(Model?.AlertType))
    {
        <div class="alert alert-danger col-12" role="alert">
            @Model?.Message
        </div>
    }
    else
    {
        var alertType = Model?.AlertType ?? "alert-danger";
        <div class="alert @alertType col-12" role="alert">
            @Model?.Message
        </div>
    }
}
<form action="/Home/Order/@Model?.Order?.OrderId" method="post" class="needs-validation">
    @Html.AntiForgeryToken()
    <input asp-for="Order.OrderId" type="text" class="form-control" readonly hidden>
    <input asp-for="Order.DateSubmitted" type="text" class="form-control" readonly hidden>
    <div class="row">
        <div class="col">
            <div class="d-grid gap-2">
                <a href="https://acceleratenetworks.com/cart/order/@Model?.Order?.OrderId" class="btn btn-primary" target="_blank" rel="noopener noreferrer">
                    Customer's View
                </a>
            </div>
        </div>
        <div class="col">
            <div class="d-grid gap-2">
                <a href="/Home/Emails/@Model?.Order?.OrderId" class="btn btn-secondary" target="_blank" rel="noopener noreferrer">
                    View Related Emails
                </a>
            </div>
        </div>
        <div class="col">
            @if (Model?.PortRequest is not null && Model?.Order is not null && Model.PortRequest.OrderId == Model.Order.OrderId)
            {
                <div class="d-grid gap-2">
                    <a href="/Home/PortRequests/@Model?.Order?.OrderId" class="btn btn-info text-white">
                        Edit Related Port Request
                    </a>
                </div>
            }
        </div>
        <div class="col">
            <div class="mb-3">
                <div class="form-check form-switch">
                    <input class="form-check-input" asp-for="Order.BackgroundWorkCompleted" type="checkbox" role="switch">
                    <label class="form-check-label" for="backgroundWorkSwitch">Background Work Completed</label>
                </div>
                <div class="form-check form-switch">
                    <input class="form-check-input" asp-for="Order.Quote" type="checkbox" role="switch">
                    <label class="form-check-label" for="orderIsQuote">Quote</label>
                </div>

                <div class="form-check form-switch">
                    <input class="form-check-input" asp-for="Order.Completed" type="checkbox" role="switch">
                    <label class="form-check-label" for="orderisCompleted">Mark This Order as Completed</label>
                </div>
            </div>
        </div>
        @if (Model?.Order?.MergedOrderId is not null)
        {
            <div class="col">
                <div class="mb-3">
                    <span class="badge bg-warning rounded-pill">
                        Merged into <a href="/Home/Order/{@Model?.Order?.MergedOrderId}">@Model?.Order?.MergedOrderId</a>
                    </span>
                </div>
            </div>
        }
    </div>
    <h4 class="mb-3">Invoice Ninja</h4>
    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.BillingInvoiceId" type="text" class="form-control" placeholder="No billing invoice is associated with this order.">
                <label for="billingInvoiceId">Upfront Invoice Id</label>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.BillingInvoiceReoccuringId" type="text" class="form-control" placeholder="No reoccuring billing invoice is associated with this order.">
                <label for="billingReoccuringInvoiceId">Reoccuring Invoice Id</label>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.BillingClientId" type="text" class="form-control" placeholder="No billing client is associated with this order.">
                <label for="billingClientId">Client Id</label>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <div class="d-grid gap-2">
                @if (!string.IsNullOrWhiteSpace(Model?.Order?.BillingClientId))
                {
                    <a href="https://billing.acceleratenetworks.com/clients/@Model?.Order?.BillingClientId" class="btn btn-outline-info" target="_blank" rel="noopener noreferrer">
                        View Billing Client
                    </a>
                }
            </div>
        </div>
        <div class="col">
            <div class="d-grid gap-2">
                @if (!string.IsNullOrWhiteSpace(Model?.Order?.BillingInvoiceId))
                {
                    <a href="@Model?.Order?.UpfrontInvoiceLink" class="btn btn-outline-primary" target="_blank" rel="noopener noreferrer">
                        View Upfront Invoice
                    </a>
                }
            </div>
        </div>
        <div class="col">
            <div class="d-grid gap-2">
                @if (!string.IsNullOrWhiteSpace(Model?.Order?.BillingInvoiceReoccuringId))
                {
                    <a href="@Model?.Order?.ReoccuringInvoiceLink" class="btn btn-outline-success" target="_blank" rel="noopener noreferrer">
                        View Recurring Invoice
                    </a>
                }
            </div>
        </div>
    </div>
    <h4 class="mb-3">Billing Information</h4>
    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.FirstName" type="text" class="form-control" id="firstName" placeholder="Alexander" required>
                <label for="firstName">First name</label>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.LastName" type="text" class="form-control" id="lastName" placeholder="Bell" required>
                <label for="lastName">Last name</label>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.BusinessName" type="text" class="form-control" id="businessName" placeholder="American Telegraph and Telephone Company">
                <label for="business">Business Name (Optional)</label>
                <div class="invalid-feedback">
                    Please enter a valid business name.
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.Email" type="email" class="form-control" id="email" placeholder="you@example.com" required>
                <label for="email">Email </label>
                <div class="invalid-feedback">
                    Please enter a valid email address for shipping updates.
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.ContactPhoneNumber" type="tel" class="form-control" id="phone" placeholder="2068588757">
                <label for="phone">Direct Phone Number</label>
                <small class="invalid-feedback">
                    What number can we call to talk to you?
                </small>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3" hidden>
                <input type="text" class="form-control" id="phone" placeholder="2068588757">
                <label for="contact">Direct Phone Number</label>
                <small class="invalid-feedback">
                    What number can we call to talk to you?
                </small>
            </div>
        </div>
    </div>
    <div class="form-floating mb-3" id="searchForm">
        <input asp-for="Order.UnparsedAddress" type="text" class="form-control" id="address" placeholder="5432 5th Ave" pattern=".+[,].+" oninput="handleSearchQuery(this)" onfocus="handleSearchQuery(this)" list="addressOptions" autocomplete="off" data-toggle="dropdown" required>
        <label for="address">Address</label>
        <ul class="list-group" role="menu" aria-labelledby="menu1" id="addressOptions">
        </ul>
        <small class="text-muted">
            Enter the shipping address for this order, or the address of the installation location (ex. 1250 1st Ave S, Seattle, WA, 98134, USA)
        </small>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-floating mb-3">
                <select asp-for="Order.AddressUnitType" class="form-select d-block w-100" id="unitType">
                    <option></option>
                    @{
                        var unitTypes = new string[] {
                    "Apartment",
                    "Basement",
                    "Building",
                    "Department",
                    "Floor",
                    "Front",
                    "Hanger",
                    "Lobby",
                    "Lot",
                    "Lower",
                    "Office",
                    "Penthouse",
                    "Pier",
                    "Rear",
                    "Room",
                    "Side",
                    "Space",
                    "Suite",
                    "Trailer",
                    "Unit",
                    "Upper",
                                };

                        foreach (var unitType in unitTypes)
                        {
                            <option>@unitType</option>
                        }
                    }
                </select>
                <label for="unitType">Unit Type <span class="text-muted">(Optional)</span></label>
                <small class="text-muted">
                    Optionally enter a unit type (ex. Apartment)
                </small>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.AddressUnitNumber" type="text" class="form-control" id="address2" placeholder="307">
                <label for="address2">Unit Number <span class="text-muted">(Optional)</span></label>
                <small class="text-muted">
                    Optionally enter a unit number (ex. 307)
                </small>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input asp-for="Order.Address2" type="text" class="form-control" id="address2" placeholder="Apartment or suite">
                <label for="address2">Address 2 <span class="text-muted">(Optional)</span></label>
            </div>
        </div>
    </div>

    <h4 class="mb-3">Installation Information</h4>
    <div class="row">
        <div class="col mb-3">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" asp-for="Order.OnsiteInstallation" role="switch" id="onsiteInstall">
                <label class="form-check-label" for="onsiteInstall">Onsite Installation</label>
            </div>
        </div>
        <div class="col mb-3">
            <div class="form-floating mb-3">
                <input asp-for="Order.InstallDate" type="datetime-local" class="form-control" id="installdate">
                <label for="installdate">Preferred Install Date</label>
            </div>
        </div>
        <div class="col mb-3">
            <div class="form-floating mb-3">
                <select asp-for="Order.SalesEmail" class="form-select mr-sm-2" id="sales">
                    <option value="support@acceleratenetworks.com">Support</option>
                    <option value="dan@acceleratenetworks.com">Dan</option>
                    <option value="scott@acceleratenetworks.com">Scott</option>
                    <option value="tyler@acceleratenetworks.com">Tyler</option>
                </select>
                <label for="sales">Sales Representative</label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-floating mb-3">
                <input asp-for="Order.CustomerNotes" type="text" class="form-control" id="customernotes" placeholder="Add important information for our staff">
                <label for="zip" class="text-muted">Notes</label>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-success">Update</button>
            </div>
            <div class="form-text">Hit this button to save the changes you've made to this Order.</div>
        </div>
        <div class="col">
            <div class="d-grid gap-2">
                <a href="/Home/Order/@Model?.Order?.OrderId/Delete" class="btn btn-danger btn-block">Delete</a>
            </div>
            <div class="form-text">Hit this button to delete this Order. This cannot be undone.</div>
        </div>
        <div class="col">
            <a href="/Home/Order/@Model?.Order?.OrderId/Delete" class="btn btn-danger btn-block" hidden>Delete</a>
        </div>
    </div>
</form>
<h4 class="mb-3">Merge this Order with another Order</h4>
<form action="/Home/Order/@Model?.Order?.OrderId/Merge" method="post">
    <div class="row mt-3">
        <div class="col">
            <div class="form-floating mb-3">
                <input value="@Model?.Order?.OrderId" type="text" class="form-control" readonly>
                <label for="address">Current Order Id</label>
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                <input name="mergeId" type="text" class="form-control" />
                <label for="address">Id of the Order To Merge</label>
            </div>
            <div class="form-text">Copy this Id from the URL of the other order. It will be the final segment of the URL, the part that comes after /Home/Order/</div>
        </div>
        <div class="col">
            <div class="mb-3">
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-outline-danger btn-block">Merge</button>
                </div>
                <div class="form-text">Just like Deleting an Order, Merging another order into this Order cannot be undone.</div>
            </div>
        </div>
    </div>
</form>
@if ((Model?.Cart?.PurchasedPhoneNumbers is not null && Model.Cart.PurchasedPhoneNumbers.Any()) || (Model?.Cart?.PortedPhoneNumbers is not null && Model.Cart.PortedPhoneNumbers.Any()))
{
    <h4 class="mb-3">E911 Registrations</h4>
    <div class="row">
        <div class="col">
            <div class="mb-3">
                @if (Model?.EmergencyInformation is not null && Model.EmergencyInformation.Any())
                {
                    <div class="table-responsive shadow-sm">
                        <table class="table table-striped table-borderless table-hover">
                            <thead>
                                <tr>
                                    <th>Number</th>
                                    <th>CallerId</th>
                                    <th>Address</th>
                                    <th>First Registered</th>
                                    <th>Last Verified</th>
                                    <th>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var registration in Model.EmergencyInformation)
                                {
                                    <tr>
                                        <td>
                                            @registration.DialedNumber
                                        </td>
                                        <td>
                                            @registration?.CallerName
                                        </td>
                                        <td>
                                            @registration?.AddressLine1
                                            @registration?.AddressLine2
                                            @registration?.City
                                            @registration?.State
                                            @registration?.Zip
                                        </td>
                                        <td>
                                            @registration?.BulkVSLastModificationDate?.ToShortDateString()
                                        </td>
                                        <td>
                                            @registration?.ModifiedDate?.ToShortDateString()
                                        </td>
                                        <td>
                                            <a href="/Home/OwnedNumbers/@registration?.DialedNumber" class="btn btn-outline-secondary" target="_blank">
                                                Edit Owned Number
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p>No registered numbers in this order.</p>
                }
            </div>
        </div>

    </div>
}
@{
    var productOrders = Model?.Cart?.ProductOrdersToDictionary();
    if (Model?.Cart is not null
        && ((Model?.Cart?.PhoneNumbers is not null && Model.Cart.PhoneNumbers.Any())
        || (Model?.Cart?.Products is not null && Model.Cart.Products.Any())
        || (Model?.Cart?.Services is not null && Model.Cart.Services.Any())
        || (Model?.Cart?.PortedPhoneNumbers is not null && Model.Cart.PortedPhoneNumbers.Any())
        || (Model?.Cart?.VerifiedPhoneNumbers is not null && Model.Cart.VerifiedPhoneNumbers.Any())
        || (Model?.Cart?.PurchasedPhoneNumbers is not null && Model.Cart.PurchasedPhoneNumbers.Any())))
    {
        <h4 class="mb-3">Cart</h4>
        <div class="row mt-3">
            <div class="col">
                <div class="table-responsive shadow-sm">
                    <table class="table table-striped table-borderless table-hover m-0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th>Subtotal</th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (Model?.Cart?.PhoneNumbers is not null && productOrders is not null)
                                {
                                    foreach (var item in Model.Cart.PhoneNumbers)
                                    {
                                        var productOrder = productOrders[item.DialedNumber.ToString()];
                                        var location = $"{item?.City ?? "Unknown City"}, {item?.State ?? "Unknown State"}";
                                        var formattedNumber = $"({item?.NPA}) {item?.NXX}-{item?.XXXX.ToString("0000")}";
                                        var number = item?.DialedNumber;
                                        <tr>
                                            <td scope="row"><h4>@formattedNumber</h4></td>
                                            <td>@item?.DialedNumber</td>
                                            @{
                                                var price = 0;
                                                if (item?.NumberType == "Executive")
                                                {
                                                    price = 200;
                                                }
                                                else if (item?.NumberType == "Premium")
                                                {
                                                    price = 40;
                                                }
                                                else
                                                {
                                                    price = 20;
                                                }
                                            }
                                            <td>$@price</td>
                                            <td>$@price</td>
                                            <td>
                                                <div class="btn-group">
                                                    <a href="/ProductOrders/Edit/@productOrder.ProductOrderId" class="btn btn-outline-warning">
                                                        Edit
                                                    </a>
                                                    <a href="/ProductOrders/Delete/@productOrder.ProductOrderId" class="btn btn-outline-danger">
                                                        Delete
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }

                                if (Model?.Cart?.PurchasedPhoneNumbers is not null && productOrders is not null)
                                {
                                    foreach (var item in Model.Cart.PurchasedPhoneNumbers)
                                    {
                                        var checkFind = productOrders.TryGetValue(item.DialedNumber!.ToString(), out var productOrder);
                                        var registered = Model?.EmergencyInformation.FirstOrDefault(x => x.DialedNumber == item.DialedNumber);
                                        if (checkFind)
                                        {
                                            var formattedNumber = $"({item.NPA}) {item.NXX}-{item.XXXX?.ToString("0000")}";
                                            var number = item.DialedNumber;
                                            <tr>
                                                <td scope="row"><h4><a class="link-dark" href="/Home/NumberOrders/@item?.DialedNumber">@formattedNumber</a></h4></td>
                                                <td>@item?.DialedNumber</td>
                                                @{
                                                    if (item?.NumberType == "Executive")
                                                    {
                                                        <td>$200</td>
                                                    }
                                                    else if (item?.NumberType == "Premium")
                                                    {
                                                        <td>$40</td>
                                                    }
                                                    else
                                                    {
                                                        <td>$20</td>
                                                    }
                                                }
                                                @{
                                                    if (item?.NumberType == "Executive")
                                                    {
                                                        <td>$200</td>
                                                    }
                                                    else if (item?.NumberType == "Premium")
                                                    {
                                                        <td>$40</td>
                                                    }
                                                    else
                                                    {
                                                        <td>$20</td>
                                                    }
                                                }
                                                <td>
                                                    <div class="btn-group">
                                                        <a href="/ProductOrders/Edit/@productOrder?.ProductOrderId" class="btn btn-outline-warning">
                                                            Edit
                                                        </a>
                                                        <a href="/ProductOrders/Delete/@productOrder?.ProductOrderId" class="btn btn-outline-danger">
                                                            Delete
                                                        </a>
                                                        @if (registered is not null && registered.DialedNumber == item?.DialedNumber)
                                                        {
                                                            <a href="/Home/Order/@Model?.Order?.OrderId/RegisterE911?serviceNumber=@item?.DialedNumber" class="btn btn-danger">
                                                                Re-register for E911
                                                            </a>
                                                        }
                                                        else
                                                        {
                                                            <a href="/Home/Order/@Model?.Order?.OrderId/RegisterE911?serviceNumber=@item?.DialedNumber" class="btn btn-warning text-light">
                                                                Register for E911
                                                            </a>
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                            @if (Model?.Cart?.PortedPhoneNumbers is not null)
                            {
                                var freePortedNumbers = Model?.Cart?.Services?.Count();

                                foreach (var item in Model!.Cart.PortedPhoneNumbers.ToArray())
                                {
                                    var calculatedCost = 20;

                                    var productOrder = Model!.Cart.ProductOrders?.Where(x => x.PortedDialedNumber == item.PortedDialedNumber).FirstOrDefault();
                                    var registered = Model?.EmergencyInformation.FirstOrDefault(x => x.DialedNumber == item.PortedDialedNumber);

                                    var location = $"{item?.City ?? "Unknown City"}, {item?.State ?? "Unknown State"}";
                                    var formattedNumber = $"({item?.NPA}) {item?.NXX}-{item?.XXXX.ToString("0000")}";
                                    var number = item?.PortedDialedNumber;
                                    <tr>
                                        <td scope="row"><h4>@formattedNumber</h4></td>
                                        <td>@item?.PortedDialedNumber</td>
                                        <td>$@calculatedCost</td>
                                        <td>$@calculatedCost</td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/ProductOrders/Edit/@productOrder?.ProductOrderId" class="btn btn-outline-warning">
                                                    Edit
                                                </a>
                                                <a href="/ProductOrders/Delete/@productOrder?.ProductOrderId" class="btn btn-outline-danger">
                                                    Delete
                                                </a>
                                                @if (registered is not null && registered.DialedNumber == item?.PortedDialedNumber)
                                                {
                                                    <a href="/Home/Order/@Model?.Order?.OrderId/RegisterE911?serviceNumber=@item?.PortedDialedNumber" class="btn btn-danger">
                                                        Re-register for E911
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a href="/Home/Order/@Model?.Order?.OrderId/RegisterE911?serviceNumber=@item?.PortedDialedNumber" class="btn btn-warning text-light">
                                                        Register for E911
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model?.Cart?.VerifiedPhoneNumbers is not null && productOrders is not null)
                            {
                                foreach (var item in Model.Cart.VerifiedPhoneNumbers)
                                {
                                    var productOrder = productOrders[item.VerifiedPhoneNumberId.ToString()];
                                    var location = $"{item?.City ?? "Unknown City"}, {item?.Province ?? "Unknown State"}";
                                    var formattedNumber = $"({item?.NPA}) {item?.NXX}-{item?.XXXX.ToString("0000")}";
                                    var number = item?.VerifiedDialedNumber;
                                    <tr>
                                        <td scope="row"><h4>@formattedNumber</h4></td>
                                        <td>@item?.VerifiedDialedNumber</td>
                                        <td>$10</td>
                                        <td>$10</td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/ProductOrders/Edit/@productOrder.ProductOrderId" class="btn btn-outline-warning">
                                                    Edit
                                                </a>
                                                <a href="/ProductOrders/Delete/@productOrder.ProductOrderId" class="btn btn-outline-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model?.Cart?.Products is not null && productOrders is not null)
                            {
                                foreach (var item in Model.Cart.Products)
                                {
                                    var productOrder = productOrders[item.ProductId.ToString()];
                                    var checkPrice = int.TryParse(item.Price, out var price);
                                    var localTotal = productOrder.Quantity * price;
                                    <tr>
                                        <td scope="row"><h4>@item.Name</h4></td>
                                        @{
                                            if (productOrder.Quantity > 1)
                                            {
                                                <td>@productOrder.Quantity Units</td>
                                            }
                                            else
                                            {
                                                <td>@productOrder.Quantity Unit</td>
                                            }
                                        }
                                        <td>at $@item.Price each</td>
                                        <td>$@localTotal</td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/ProductOrders/Edit/@productOrder.ProductOrderId" class="btn btn-outline-warning">
                                                    Edit
                                                </a>
                                                <a href="/ProductOrders/Delete/@productOrder.ProductOrderId" class="btn btn-outline-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model?.Cart?.Services is not null && productOrders is not null)
                            {
                                foreach (var item in Model.Cart.Services)
                                {
                                    var productOrder = productOrders[item.ServiceId.ToString()];
                                    var checkPrice = int.TryParse(item.Price, out var price);
                                    var localTotal = productOrder.Quantity * price;
                                    <tr>
                                        <td scope="row"><h4>@item.Name</h4></td>
                                        @{
                                            if (productOrder.Quantity > 1)
                                            {
                                                <td>@productOrder.Quantity Units</td>
                                            }
                                            else
                                            {
                                                <td>@productOrder.Quantity Unit</td>
                                            }
                                        }
                                        <td>at $@item.Price per</td>
                                        <td>$@localTotal</td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/ProductOrders/Edit/@productOrder.ProductOrderId" class="btn btn-outline-warning">
                                                    Edit
                                                </a>
                                                <a href="/ProductOrders/Delete/@productOrder.ProductOrderId" class="btn btn-outline-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            @if (Model?.Cart?.Coupons is not null && productOrders is not null)
                            {
                                foreach (var item in Model.Cart.Coupons)
                                {
                                    var productOrder = productOrders[item.CouponId.ToString()];
                                    <tr>
                                        <td scope="row"><h4>@item.Name</h4></td>
                                        <td>Discount</td>
                                        <td></td>
                                        <td></td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/ProductOrders/Edit/@productOrder.ProductOrderId" class="btn btn-outline-warning">
                                                    Edit
                                                </a>
                                                <a href="/ProductOrders/Delete/@productOrder.ProductOrderId" class="btn btn-outline-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col">
                <div class="d-grid gap-2">
                    <a href="/ProductOrders/Create?orderId=@Model?.Order?.OrderId" class="btn btn-outline-primary btn-block">
                        Add Item to Order
                    </a>
                    <div class="form-text">If you want to add more Items to this Order, use this button.</div>
                </div>
            </div>
            <div class="col">
                <div class="d-grid gap-2">
                    <a href="/Home/Order/@Model?.Order?.OrderId/NewInvoices" class="btn btn-outline-secondary btn-block">
                        Sync Invoices
                    </a>
                    <div class="form-text">If you've added Items to this Order, use this button to updated the invoices in the billing system to match.</div>
                </div>
            </div>
            <div class="col">
                @if (Model?.Cart?.Products is not null && Model.Cart.Products.Any())
                {
                    <form action="/Order/@Model?.Order?.OrderId/CreateProductItems" method="get">
                        <div class="input-group">
                            <button class="btn btn-warning text-white btn-block" type="submit" id="button-addon1">
                                Link to TeleDynamics Order
                            </button>
                            @if (Model?.ProductItems.Length > 0 && !string.IsNullOrWhiteSpace(Model?.ProductItems.FirstOrDefault()?.ExternalOrderId))
                            {
                                <input type="text" class="form-control" name="teleDynamicsOrderNumber" value="@Model?.ProductItems.FirstOrDefault()?.ExternalOrderId" aria-label="Example text with button addon" aria-describedby="button-addon1">
                            }
                            else
                            {
                                <input type="text" class="form-control" name="teleDynamicsOrderNumber" placeholder="Order #" aria-label="Example text with button addon" aria-describedby="button-addon1">
                            }
                        </div>
                    </form>
                    <div class="form-text">If you want to link this Order to an order for Hardware from TeleDynamics enter the Order # here and hit the button to ingest all of that information. Find the Order # at <a href="https://www.teledynamics.com/#/ordersAndQuotes" target="_blank">https://www.teledynamics.com/#/ordersAndQuotes</a></div>
                }
            </div>
        </div>
        @if (Model?.ProductItems is not null && Model?.ProductItems?.Length > 0)
        {
            <h4 class="mb-3 mt-3">Assigned Hardware</h4>

            <span class="small">If this doesn't autofill the information from the Linked order please file a bug on GitHub with the URL from this page and the Order # in the TeleDynamics system.</span>
            <div class="row mt-3">
                <div class="col">
                    <div class="table-responsive shadow-sm">
                        <table class="table table-striped table-borderless table-hover">
                            <thead>
                                <tr>
                                    <th>Hardware</th>
                                    <th>Serial Number</th>
                                    <th>MAC Address</th>
                                    <th>Condition</th>
                                    <th>TeleDynamics Order #</th>
                                    <th>Tracking</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model?.ProductItems is not null)
                                {
                                    foreach (var item in Model.ProductItems)
                                    {
                                        var productName = Model?.Cart?.Products?.Where(x => x.ProductId == item?.ProductId).FirstOrDefault();
                                        <tr>
                                            <td><h4>@productName?.Name</h4></td>
                                            <td>@item?.SerialNumber</td>
                                            <td>@item?.MACAddress</td>
                                            <td>@item?.Condition</td>
                                            <td>@item?.ExternalOrderId</td>
                                            @if (!string.IsNullOrWhiteSpace(item?.ShipmentTrackingLink))
                                            {
                                                <td><a href="@item?.ShipmentTrackingLink" target="_blank" class="btn btn-info">@item?.Carrier - @item?.TrackingNumber</a></td>
                                            }
                                            else
                                            {
                                                <td>@item?.Carrier - @item?.TrackingNumber</td>
                                            }
                                            <td>
                                                <div class="btn-group" role="group" aria-label="Basic example">
                                                    <a href="/Products/Details/@item?.ProductId" class="btn btn-outline-primary">Product</a>
                                                    <a href="/ProductItems/Edit/@item?.ProductItemId" class="btn btn-warning">Edit</a>
                                                    <a href="/ProductItems/Details/@item?.ProductItemId" class="btn btn-primary">Details</a>
                                                    <a href="/ProductItems/Delete/@item?.ProductItemId" class="btn btn-danger">Delete</a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        <br />
    }
    else
    {
        <div class="row mt-3">
            <div class="col">
                <div class="alert alert-warning col" role="alert">
                    There are no items in your cart!
                </div>
            </div>
        </div>
        <br />
    }
}