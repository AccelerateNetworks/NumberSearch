@page "/"
@{
    Layout = "_Layout";
    ViewData["Title"] = "Orders";
}
@using AccelerateNetworks.Operations;
@model NumberSearch.Ops.Pages.OrdersModel
<script type="text/javascript">
    function handleSearchQuery(textBox) {
        const routeStart = './Orders/Search';
        fetch(`${routeStart}?query=${textBox.value}`)
            .then(
                function (response) {
                    if (response.status !== 200) {
                        console.log('Looks like there was a problem. Status Code: ' +
                            response.status);
                        return;
                    }
                    // Examine the text in the response
                    response.json().then(function (data) {
                        console.log(data);
                        var options = '';
                        for (var i = 0; i < data.length; i++) {
                            options += '<option value="' + data[i] + '" />';
                        }
                        var datalist = document.createElement("datalist");
                        datalist.id = 'realaccountoptions';
                        datalist.innerHTML = options;
                        var textBox = document.getElementById("searchInput");
                        var check = document.getElementById('realaccountoptions');
                        if (typeof (check) != 'undefined' && check != null) {
                            check.remove();
                        }
                        textBox.appendChild(datalist);
                        textBox.setAttribute('list', 'realaccountoptions');
                        console.log(datalist);
                    });
                }
            )
            .catch(function (err) {
                console.log('Fetch Error :-S', err);
            });
    }
    function onInput(textBox) {
        var val = document.getElementById("searchInput").value;
        var check = document.getElementById('realaccountoptions');
        if (typeof (check) != 'undefined' && check != null) {
            var opts = document.getElementById('realaccountoptions').childNodes;
            for (var i = 0; i < opts.length; i++) {
                if (opts[i].value === val) {
                    var form = document.getElementById("searchForm");
                    form.submit();
                }
            }
        }
        handleSearchQuery(textBox);
    }
</script>
<h1 class="display-4 p-3">🛒 Orders</h1>
<div class="row">
    <div class="col-xs-12 col-lg-6">
        <form asp-page="./Orders" method="get" id="searchForm">
            <div class="input-group mb-3">
                <input name="Query" id="searchInput" value="@Model?.Query" type="search" class="form-control" placeholder="Filter by Business Name or Name" onchange="handleSearchQuery(this)" autocomplete="off" oninput="onInput(this)">
                <button class="btn btn-primary" type="submit" id="button-addon2">Filter</button>
                <a class="btn btn-outline-secondary" href="./">Reset</a>
            </div>
        </form>
    </div>
    <div class="col-xs-12 col-lg-6">
        <p>Enter the name of the business you'd like to find an Order for or the Name of the person who submitted that order. The search box will suggest unique Order and client names. Click on a suggestion to jump into the results. Not seeing what you're looking for? Type your filter in the box and click the Filter button and we'll search both Business and client names for a match. Want to see all Orders sorted from newest to oldest? Click the Reset button. Have the OrderId from the URL of an Order? Paste it into the search box and hit Enter.</p>
    </div>
</div>
@if (Model?.Orders is not null && Model?.Orders.Length > 0)
{
    <div class="table-responsive d-none d-md-block">
        <table class="table table-striped table-borderless table-hover">
            <thead>
                <tr>
                    <th>
                        Order Information
                    </th>
                    <th>
                        Customer Information
                    </th>
                    <th>
                        Products Ordered
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model?.Orders is not null)
                {
                    foreach (var order in Model.Orders)
                    {
                        var businessName = string.IsNullOrWhiteSpace(order.Order?.BusinessName) ? $"{order.Order?.FirstName} {order?.Order?.LastName}" : order.Order.BusinessName;
                        var nextStep = "Next Step";
                        var pillColor = "danger";
                        // The order is completed, we're good.
                        if (order?.Order?.Completed is true)
                        {
                            nextStep = "🎉 Done";
                            pillColor = "success";
                        }
                        // The order is not completed, and is stale.
                        else if (order?.Order?.Completed is not true && order?.Order?.DateSubmitted <
                        DateTime.Now.AddDays(-14))
                        {
                            nextStep = "⭕ Stale";
                            pillColor = "warning";
                        }
                        else if (order?.Order?.Completed is not true)
                        {
                            if (order?.Order?.Quote is not null && order.Order.Quote)
                            {
                                nextStep = $"⭕ Pending Quote";
                                pillColor = "warning";
                            }
                            else if (order?.Order?.DateUpfrontInvoicePaid is null)
                            {
                                nextStep = $"❌ Unpaid";
                                pillColor = "danger";
                            }
                            else if (order?.PortRequest is null && order?.ProductOrders is not null && order.ProductOrders.Where(x => x.PortedPhoneNumberId.HasValue is true).Any())
                            {
                                nextStep = $"⭕ Need Port";
                                pillColor = "danger";
                            }
                            else if (order?.PortRequest is not null && order?.PortRequest.OrderId == order?.Order?.OrderId)
                            {
                                if (order?.PortRequest?.Completed is true)
                                {
                                    if (order?.Order?.OnsiteInstallation is true)
                                    {
                                        nextStep = $"⭕ Install {order?.Order?.InstallDate.GetValueOrDefault().ToShortDateString()}";
                                        pillColor = "info";
                                    }
                                    else
                                    {
                                        nextStep = $"⭕ Ship";
                                        pillColor = "info";
                                    }
                                }
                                else
                                {
                                    nextStep = "⭕ Port";
                                    pillColor = "danger";
                                }
                            }
                            else
                            {
                                if (order?.Order?.OnsiteInstallation is true)
                                {
                                    nextStep = $"⭕ Install";
                                    pillColor = "info";
                                }
                                else
                                {
                                    nextStep = $"⭕ Ship";
                                    pillColor = "info";
                                }
                            }
                        }

                        <tr>
                            <td data-order="@order?.Order?.DateSubmitted.Ticks">
                                <h3>
                                    <a href="/Home/Order/@order?.Order?.OrderId" class="link-dark">
                                        @businessName
                                    </a>
                                </h3>
                                <p class="text-muted">
                                    @order?.Order?.DateSubmitted.ToString("MM/dd/yy hh:mm tt") <span class="badge bg-@pillColor">
                                        @nextStep
                                    </span>
                                    @if (order?.Order is not null && order.Order.DateSubmitted > DateTime.Now.AddDays(-1))
                                    {
                                        <span class="badge bg-danger">
                                            ✨ New Today
                                        </span>
                                    }
                                    else if (order?.Order is not null && order.Order.DateSubmitted > DateTime.Now.AddDays(-7))
                                    {
                                        <span class="badge bg-primary">
                                            🔍 This Week
                                        </span>
                                    }
                                    @if (order?.Order?.DateUpfrontInvoicePaid is null)
                                    {
                                        <span class="badge bg-danger">
                                            ❌ Unpaid
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">
                                            💵 Paid @order?.Order?.DateUpfrontInvoicePaid.Value.ToShortDateString()
                                        </span>
                                    }
                                </p>
                                @if (order?.PortRequest is not null && order?.Order is not null && order.PortRequest.OrderId == order.Order.OrderId)
                                {
                                    <p>
                                        <div class="btn-group" role="group" aria-label="Basic example">
                                            <a href="/Home/PortRequests/@order?.Order?.OrderId" class="btn btn-info text-white">
                                                Edit Related Port Request
                                            </a>
                                        </div>
                                    </p>
                                }
                                else if (order?.ProductOrders is not null && order.ProductOrders.Where(x => x.PortedPhoneNumberId.HasValue).Any())
                                {
                                    <p>
                                        <div class="btn-group" role="group" aria-label="Basic example">
                                            <a href="https://acceleratenetworks.com/Cart/PortingInformation/@order?.Order?.OrderId" class="btn btn-dark" target="_blank" rel="noopener noreferrer">
                                                Get Port Request From Customer
                                            </a>
                                        </div>
                                    </p>
                                }
                                <p>
                                    <div class="btn-group mt-2" role="group" aria-label="Basic example">
                                        @if (!string.IsNullOrWhiteSpace(order?.Order?.UpfrontInvoiceLink))
                                        {
                                            <a href="@order?.Order?.UpfrontInvoiceLink" class="btn btn-outline-success" target="_blank" rel="noopener noreferrer">
                                                View Upfront Quote
                                            </a>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(order?.Order?.ReoccuringInvoiceLink))
                                        {
                                            <a href="@order?.Order?.ReoccuringInvoiceLink" class="btn btn-outline-primary" target="_blank" rel="noopener noreferrer">
                                                View Recurring Quote
                                            </a>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(order?.Order?.BillingClientId))
                                        {
                                            <a href="https://billing.acceleratenetworks.com/clients/@order?.Order?.BillingClientId" class="btn btn-outline-info" target="_blank" rel="noopener noreferrer">
                                                View Billing Client
                                            </a>
                                        }
                                    </div>
                                </p>
                            </td>
                            <td>
                                <strong>Customer Name</strong>
                                <p>
                                    @order?.Order?.FirstName
                                    @order?.Order?.LastName
                                    <a href="mailto:@order?.Order?.Email" target="_blank">
                                        @order?.Order?.Email
                                    </a>
                                </p>
                                <strong>Address</strong>
                                <p>
                                    @order?.Order?.Address

                                    @order?.Order?.Address2

                                    @order?.Order?.City

                                    @order?.Order?.State

                                    @order?.Order?.Zip
                                </p>
                            </td>
                            <td>
                                @if (order?.ProductOrders is not null)
                                {
                                    var purchased = new List<ProductOrder>();
                                    var ported = new List<ProductOrder>();
                                    var services = new List<ProductOrder>();
                                    var products = new List<ProductOrder>();
                                    var verified = new List<ProductOrder>();
                                    foreach (var product in order.ProductOrders)
                                    {
                                        if (!string.IsNullOrWhiteSpace(product.DialedNumber))
                                        {
                                            purchased.Add(product);
                                        }
                                        else if (!string.IsNullOrWhiteSpace(product.PortedDialedNumber) || product.PortedPhoneNumberId is not null)
                                        {
                                            ported.Add(product);
                                        }
                                        else if (product.VerifiedPhoneNumberId is not null)
                                        {
                                            verified.Add(product);
                                        }
                                        else if (!(product.ServiceId == Guid.Empty))
                                        {
                                            services.Add(product);
                                        }
                                        else if (!(product.ProductId == Guid.Empty))
                                        {
                                            products.Add(product);
                                        }
                                    }
                                    if (purchased.Any())
                                    {
                                        <strong>Purchased</strong>
                                        <p>
                                            @{
                                                foreach (var product in purchased)
                                                {
                                                    var matchingPurchasedPhoneNumber = Model?.PurchasedPhoneNumbers?.Where(x => x?.DialedNumber == product?.DialedNumber).FirstOrDefault();
                                                    if (matchingPurchasedPhoneNumber is null)
                                                    {
                                                        <a class="btn btn-outline-primary mt-1" href="/Home/NumberOrders/@product.DialedNumber">@product.DialedNumber ❓</a>
                                                    }
                                                    else
                                                    {
                                                        <a class="btn btn-outline-primary mt-1" href="/Home/NumberOrders/@product.DialedNumber">@product.DialedNumber ✔️</a>
                                                    }
                                                }
                                            }
                                        </p>
                                    }
                                    if (ported.Any())
                                    {
                                        <strong>Ported</strong>
                                        <p>
                                            @{
                                                foreach (var product in ported)
                                                {
                                                    var matchingPortedPhoneNumber = Model?.PortedPhoneNumbers?.Where(x => x.OrderId == order?.Order?.OrderId && x?.PortedDialedNumber == product?.PortedDialedNumber || x?.PortedPhoneNumberId == product?.PortedPhoneNumberId).FirstOrDefault();
                                                    if (matchingPortedPhoneNumber is not null && matchingPortedPhoneNumber.Completed)
                                                    {
                                                        <a class="btn btn-outline-primary mt-1" href="/Home/PortRequests/@product.OrderId">@product.PortedDialedNumber ✔️</a>
                                                    }
                                                    else
                                                    {
                                                        <a class="btn btn-outline-primary mt-1" href="/Home/PortRequests/@product.OrderId">@product.PortedDialedNumber ❓</a>
                                                    }
                                                }
                                            }
                                        </p>
                                    }
                                    if (verified.Any())
                                    {
                                        <strong>Verified</strong>
                                        <p>
                                            @{
                                                foreach (var product in verified)
                                                {
                                                    <a class="btn btn-outline-primary mt-1" href="/Home/NumbersToVerify/@product.OrderId">@Model?.VerifiedPhoneNumbers?.Where(x => x.VerifiedPhoneNumberId == product.VerifiedPhoneNumberId).FirstOrDefault()?.VerifiedDialedNumber</a>
                                                }
                                            }
                                        </p>
                                    }
                                    if (services.Any())
                                    {
                                        <strong>Services</strong>
                                        <ul>
                                            @{
                                                foreach (var product in services)
                                                {
                                                    var serviceOutput = $"<li>{product.Quantity} x {Model?.Services?.Where(x => x.ServiceId == product.ServiceId).FirstOrDefault()?.Name}</li>";
                                                    @Html.Raw(serviceOutput)
                                                }
                                            }
                                        </ul>
                                    }
                                    if (products.Any())
                                    {
                                        <strong>Products</strong>
                                        <ul>
                                            @{
                                                foreach (var product in products)
                                                {
                                                    var productOutput = $"<li>{product.Quantity} x {Model?.Products?.Where(x => x.ProductId == product.ProductId).FirstOrDefault()?.Name}</li>";
                                                    @Html.Raw(productOutput)
                                                }
                                            }
                                        </ul>
                                    }
                                }
                                @{
                                    if (!string.IsNullOrWhiteSpace(order?.Order?.CustomerNotes))
                                    {
                                        <strong>Customer Notes</strong>
                                        <p>@order.Order.CustomerNotes</p>
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="table-responsive d-md-none">
        <table class="table table-striped table-borderless table-hover">
            <tbody>
                @if (Model?.Orders is not null)
                {
                    foreach (var order in Model.Orders)
                    {
                        var businessName = string.IsNullOrWhiteSpace(order.Order?.BusinessName) ? $"{order.Order?.FirstName} {order?.Order?.LastName}" : order.Order.BusinessName;
                        var nextStep = "Next Step";
                        var pillColor = "danger";
                        // The order is completed, we're good.
                        if (order?.Order?.Completed is true)
                        {
                            nextStep = "🎉 Done";
                            pillColor = "success";
                        }
                        // The order is not completed, and is stale.
                        else if (order?.Order?.Completed is not true && order?.Order?.DateSubmitted <
                        DateTime.Now.AddDays(-14))
                        {
                            nextStep = "⭕ Stale";
                            pillColor = "warning";
                        }
                        else if (order?.Order?.Completed is not true)
                        {
                            if (order?.Order?.Quote is not null && order.Order.Quote)
                            {
                                nextStep = $"⭕ Pending Quote";
                                pillColor = "warning";
                            }
                            else if (order?.PortRequest is null && order?.ProductOrders is not null && order.ProductOrders.Where(x => x.PortedPhoneNumberId.HasValue is true).Any())
                            {
                                nextStep = $"⭕ Need Port";
                                pillColor = "danger";
                            }
                            else if (order?.PortRequest is not null && order?.PortRequest.OrderId == order?.Order?.OrderId)
                            {
                                if (order?.PortRequest?.Completed is true)
                                {
                                    if (order?.Order?.OnsiteInstallation is true)
                                    {
                                        nextStep = $"⭕ Install {order?.Order?.InstallDate.GetValueOrDefault().ToShortDateString()}";
                                        pillColor = "info";
                                    }
                                    else
                                    {
                                        nextStep = $"⭕ Ship";
                                        pillColor = "info";
                                    }
                                }
                                else
                                {
                                    nextStep = "⭕ Port";
                                    pillColor = "danger";
                                }
                            }
                            else
                            {
                                if (order?.Order?.OnsiteInstallation is true)
                                {
                                    nextStep = $"⭕ Install";
                                    pillColor = "info";
                                }
                                else
                                {
                                    nextStep = $"⭕ Ship";
                                    pillColor = "info";
                                }
                            }
                        }
                        <tr>
                            <td data-order="@order?.Order?.DateSubmitted.Ticks">
                                <h3>
                                    <a href="/Home/Order/@order?.Order?.OrderId" class="link-dark">
                                        @businessName
                                    </a>
                                </h3>
                                <p class="text-muted">
                                    @order?.Order?.DateSubmitted.ToString("MM/dd/yy hh:mm tt") <span class="badge bg-@pillColor">
                                        @nextStep
                                    </span>
                                    @if (order?.Order is not null && order.Order.DateSubmitted > DateTime.Now.AddDays(-1))
                                    {
                                        <span class="badge bg-danger">
                                            ✨ New Today
                                        </span>
                                    }
                                    else if (order?.Order is not null && order.Order.DateSubmitted > DateTime.Now.AddDays(-7))
                                    {
                                        <span class="badge bg-primary">
                                            🔍 This Week
                                        </span>
                                    }
                                </p>
                                <p>
                                    @order?.Order?.FirstName
                                    @order?.Order?.LastName
                                    <a href="mailto:@order?.Order?.Email" target="_blank" rel="noopener noreferrer">
                                        @order?.Order?.Email
                                    </a>
                                </p>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
} else
{
    <div class="alert alert-warning" role="alert">
       ❌ No results found for this query. Please try something more generic.
    </div>
}